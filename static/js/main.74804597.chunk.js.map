{"version":3,"sources":["components/Navbar/MobileMenu.js","images/nsgLogoSnipped.png","components/Navbar/Navbar.js","images/TicTacToeCoachScreenshot860x800.png","images/FifteenGameScreenshot860x800.png","pages/WelcomePage.js","pages/TicTacToeRules.js","pages/FifteenRules.js","logic/GameLogic.js","logic/BoardLogic.js","components/Boards/Square.js","components/Boards/TicTacToeBoard.js","components/Boards/FifteenBoard.js","components/Panels/Parts/StatusHeader.js","components/Panels/Parts/GameNumber.js","components/Panels/Parts/TicTacToeRecord.js","components/Panels/Parts/FifteenRecord.js","components/Buttons/NewGameButton.js","components/Buttons/UndoButton.js","components/Panels/HumanPanel.js","pages/PlayVsHuman.js","logic/BotLogic.js","components/Buttons/DifficultyModeButtons.js","components/Buttons/BotGoFirstButton.js","components/Panels/BotPanel.js","pages/PlayVsBot.js","components/Panels/Parts/CoachsCommentary.js","components/Buttons/ShowHintsButton.js","components/Panels/CoachPanel.js","pages/PlayWithCoach.js","theme.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","menu","backgroundColor","palette","primary","main","height","display","alignItems","justifyContent","button","drawer","list","width","minWidth","fontSize","listItem","color","common","white","icon","alignContent","MobileMenu","anchor","classes","React","useState","open","state","setState","toggleDrawer","event","type","key","Box","className","Button","onClick","Drawer","paper","onClose","role","onKeyDown","List","MenuList","Fragment","ListItem","component","RouterLink","to","Icon","root","ListItemText","primaryTypographyProps","variant","Divider","ListSubheader","p","Typography","gutterBottom","pathname","navbar","zIndex","logo","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","Navbar","props","AppBar","position","Container","maxWidth","disableGutters","align","noWrap","children","pageTitle","style","paddingTop","scrollingContainer","overflowY","cardRoot","flexDirection","cardTitle","cardImage","margin","borderRadius","cardButton","textAlign","WelcomePage","Header","CardGrid","TeachingNotes","BehindTheScenes","paddingBottom","Grid","container","spacing","item","xs","GameCard","title","image","TicTacToeCoachScreenshot","FifteenGameScreenshot","Card","CardHeader","titleTypographyProps","CardMedia","textTransform","params","href","TicTacToeRulesPage","Title","PlayModeIconGrid","Rules","TeachingTips","marginBottom","IconCard","iconClassName","fullWidth","border","paragraph","FifteenRulesPage","trioList","i","j","k","complementOf","newTrio","push","generateTrioList","sumOfTwo","listOfPossiblePositions","positionsList","parentLength","childPositions","map","parent","getChildren","flat","getListOfPossiblePositions","generatePositionToOutcomeMap","outcomeMap","Map","length","positions","ml","set","outcome","status","xHasWon","oHasWon","nextPlayer","gameOver","gameHasBeenWon","sumsOfThree","xNumbers","includes","oNumbers","finalOutcome","childrensOutcomes","child","get","predictedOutcome","moveListStringToArray","filter","move","turn","Array","from","e","Number","availableNumbers","getValidMoves","forEach","Set","delete","parseInt","charAt","intersect","listOne","listTwo","moveSet","sums","sum","sumsOfTwo","highlightWins","colors","fill","Xs","Os","trio","numbersInWin","num","getBoardHints","toString","gameStatus","console","error","getHintColor","log","square","iconX","black","iconO","noColor","win","draw","lose","Square","squareIcon","squareColorClassName","claimed","unclaimed","Paper","number","elevation","handleBoardClick","board","row","Board","moveList","boardIcons","data","squareId","getBoardIcons","boardColors","showHints","getBoardColors","squares","newSquare","slice","card","playerOne","text","playerTwo","FifteenBoard","claims","getClaims","wins","getWins","numCards","newNumCard","claim","cardStatusClassName","StatusHeader","game","statusMessage","gameNumber","record","TicTacToeRecord","playMode","humanGoesFirst","recordRow","colorTileOne","colorTileTwo","ColorTile","player","FifteenRecord","playerOneName","playerTwoName","playerOneSymbol","playerTwoSymbol","NewGameButton","handleNewGameClick","disabled","mr","UndoButton","handleUndoClick","panel","infoArea","flex","padding","controls","HumanPanel","s","boardArea","marginTop","panelArea","PlayVsHuman","setMoveList","setGameNumber","setRecord","assert","shortenedMoveList","nextGameNumber","numberClicked","updatedMoveList","concat","mls","handleGameOver","winningMoves","complements","urgentDefensiveMoves","selectMoveRandomly","Math","floor","random","selectedButton","unselectedButton","DifficultyModeButtons","easyButton","difficultyMode","handleDifficultyModeChange","mediumButton","hardButton","handleBotGoFirstClick","BotPanel","PlayVsBot","setHumanGoesFirst","setDifficultyMode","handleBotsTurn","newDifficulty","warn","result","botMove","getBotMove","setTimeout","easyProtocol","mediumProtocol","hardProtocol","defensiveMoves","time","sorted","humanPlaysX","winningForBot","drawing","winningForHuman","newPosition","sortBotMoves","commetaryBox","CoachsCommentary","commentLabel","next","prev","comment","getCommentary","ShowHintsButton","toggleShowHints","buttonArea","CoachPanel","currentStatus","currentOutcome","previousOutcome","label","getCommentLabel","navbarArea","maxHeight","PlayWithCoach","setShowHints","squareClicked","createTheme","breakpoints","values","sm","light","dark","contrastText","secondary","action","disabledBackground","disabledOpacity","typography","h4","lineHeight","h5","h6","fontWeight","body1","danger","shape","responsiveFontSizes","overflow","App","CssBaseline","ThemeProvider","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.74804597.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\n// MATERIAL-UI COMPONENTS\r\nimport Box from '@material-ui/core/Box';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n// ICONS\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles(theme => ({\r\n    menu: {\r\n        // border: 'solid red 1px',\r\n        backgroundColor: theme.palette.primary.main,\r\n        height: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end'\r\n    },\r\n    button: {\r\n    },\r\n    drawer: {\r\n        height: 'auto',\r\n    },\r\n    list: {\r\n        width: 'auto',\r\n        minWidth: '300px',\r\n        fontSize: '0.8rem',\r\n        backgroundColor: theme.palette.primary.main,\r\n        height: '100%'\r\n    },\r\n    listItem: {\r\n        color: theme.palette.common.white,\r\n    },\r\n    icon: {\r\n        width: '45px',\r\n        color: theme.palette.common.white,\r\n        alignContent: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n}));\r\n\r\nexport default function MobileMenu() {\r\n    const classes = useStyles();\r\n    const [state, setState] = React.useState({\r\n        open: false,\r\n    });\r\n\r\n    const toggleDrawer = (anchor, open) => (event) => {\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n        setState({ ...state, [anchor]: open });\r\n    };\r\n\r\n    const list = (anchor) => (\r\n        <Box className={classes.list}\r\n            role=\"presentation\"\r\n            onClick={toggleDrawer(anchor, false)}\r\n            onKeyDown={toggleDrawer(anchor, false)}\r\n        >\r\n            <List>\r\n                <MenuList />\r\n            </List>\r\n        </Box>\r\n    );\r\n\r\n    return (\r\n        <Box className={classes.menu} >\r\n            <Button \r\n                className={classes.button}\r\n                onClick={toggleDrawer('open', true)}\r\n                aria-controls=\"simple-menu\"\r\n                aria-haspopup=\"true\"\r\n            >\r\n                <MenuIcon fontSize='large' />\r\n            </Button>   \r\n            <Drawer \r\n                className={classes.drawer}\r\n                classes={{ paper: 'paper'}}\r\n                anchor={'right'} \r\n                open={state['open']} \r\n                onClose={toggleDrawer('open', false)}\r\n                onClick={toggleDrawer('open', false)}\r\n            >\r\n                    {list('right')}\r\n            </Drawer>\r\n        </Box>\r\n    );\r\n}\r\n\r\n\r\n\r\nfunction MenuList() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n\r\n        <React.Fragment >\r\n\r\n            <ListItem\r\n                key={'welcome'}\r\n                button\r\n                component={RouterLink}\r\n                to='/'\r\n            >\r\n                <Icon className={\"fas fa-home fa-2x\"}\r\n                    classes={{ root: classes.icon }}\r\n                />\r\n                <ListItemText\r\n                    primary={'Welcome'}\r\n                    primaryTypographyProps={{ variant: 'h5' }}\r\n                />\r\n            </ListItem>\r\n\r\n            <Divider />\r\n\r\n\r\n            <ListSubheader >\r\n                <Box p={2} />\r\n                <Typography variant='h4' color=\"textPrimary\" gutterBottom  >\r\n                    Tic Tac Toe\r\n                </Typography>\r\n            </ListSubheader>\r\n\r\n\r\n            <ListItem\r\n                key={'rule'}\r\n                button\r\n                component={RouterLink}\r\n                to={{\r\n                    pathname: '/tic_tac_toe_rules',\r\n                }}\r\n            >\r\n                <Icon className={\"fas fa-question fa-2x\"}\r\n                    classes={{ root: classes.icon }}\r\n                />\r\n                <ListItemText\r\n                    primary={'How To Play'}\r\n                    primaryTypographyProps={{ variant: 'h5' }}\r\n                />\r\n            </ListItem>\r\n\r\n            <ListItem\r\n                key={'tic_tac_toe_vs_human'}\r\n                button\r\n                component={RouterLink}\r\n                to={{\r\n                    pathname: '/tic_tac_toe_vs_human',\r\n                }}\r\n            >\r\n                <Icon className={\"fas fa-user-friends fa-2x\"}\r\n                    classes={{ root: classes.icon }}\r\n                />\r\n                <ListItemText\r\n                    primary={'Play vs. Human'}\r\n                    primaryTypographyProps={{ variant: 'h5' }}\r\n                />\r\n            </ListItem>\r\n\r\n            <ListItem\r\n                key={'tic_tac_toe_vs_bot'}\r\n                button\r\n                component={RouterLink}\r\n                to={{\r\n                    pathname: '/tic_tac_toe_vs_bot',\r\n                }}\r\n            >\r\n                <Icon className={\"fas fa-robot fa-2x\"}\r\n                    classes={{ root: classes.icon }}\r\n                />\r\n                <ListItemText\r\n                    primary={'Play vs. Bot'}\r\n                    primaryTypographyProps={{ variant: 'h5' }}\r\n                />\r\n            </ListItem>\r\n\r\n            <ListItem\r\n                key={'tic_tac_toe_with_coach'}\r\n                button\r\n                component={RouterLink}\r\n                to={{\r\n                    pathname: '/tic_tac_toe_with_coach',\r\n                }}\r\n            >\r\n                <Icon className={\"fas fa-graduation-cap fa-2x\"}\r\n                    classes={{ root: classes.icon }}\r\n                />\r\n                <ListItemText\r\n                    primary={'Play with Coach'}\r\n                    primaryTypographyProps={{ variant: 'h5' }}\r\n                />\r\n            </ListItem>\r\n\r\n\r\n            <Divider />\r\n\r\n\r\n            <ListSubheader  >\r\n                <Box p={2} />\r\n                <Typography variant='h4' color=\"textPrimary\" gutterBottom >\r\n                    The Fifteen Game\r\n                </Typography>\r\n            </ListSubheader>\r\n\r\n            <ListItem\r\n                key={'fifteen_rules'}\r\n                button\r\n                component={RouterLink}\r\n                to={{\r\n                    pathname: '/fifteen_rules',\r\n                }}\r\n            >\r\n                <Icon className={\"fas fa-question fa-2x\"}\r\n                    classes={{ root: classes.icon }}\r\n                />\r\n                <ListItemText\r\n                    primary={'How To Play'}\r\n                    primaryTypographyProps={{ variant: 'h5' }}\r\n                />\r\n            </ListItem>\r\n\r\n            <ListItem\r\n                key={'fifteen_vs_human'}\r\n                button\r\n                component={RouterLink}\r\n                to={{\r\n                    pathname: '/fifteen_vs_human',\r\n                }}\r\n            >\r\n                <Icon className={\"fas fa-user-friends fa-2x\"}\r\n                    classes={{ root: classes.icon }}\r\n                />\r\n                <ListItemText\r\n                    primary={'Play vs. Human'}\r\n                    primaryTypographyProps={{ variant: 'h5' }}\r\n                />\r\n            </ListItem>\r\n\r\n            <ListItem\r\n                key={'fifteen_vs_bot'}\r\n                button\r\n                component={RouterLink}\r\n                to={{\r\n                    pathname: '/fifteen_vs_bot',\r\n                }}\r\n            >\r\n                <Icon className={\"fas fa-robot fa-2x\"}\r\n                    classes={{ root: classes.icon }}\r\n                />\r\n                <ListItemText\r\n                    primary={'Play vs. Bot'}\r\n                    primaryTypographyProps={{ variant: 'h5' }}\r\n                />\r\n            </ListItem>\r\n\r\n            {/* <ListItem\r\n                key={'learn_about_magic_squares'}\r\n                button\r\n                component={RouterLink}\r\n                to={{\r\n                    pathname: '/learn_about_magic_squares',\r\n                }}\r\n            >\r\n                <Icon className={\"fas fa-graduation-cap fa-2x\"}\r\n                    classes={{ root: classes.icon }}\r\n                />\r\n                <ListItemText\r\n                    primary={'Magic Squares'}\r\n                    primaryTypographyProps={{ variant: 'h5' }}\r\n                />\r\n            </ListItem> */}\r\n\r\n\r\n        </React.Fragment>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/nsgLogoSnipped.2721c635.png\";","import React from 'react';\r\n\r\n// MY COMPONENTS\r\nimport MobileMenu from \"./MobileMenu\";\r\n// import SpacerBox from \"./SpacerBox\";\r\n\r\n// Image Imports\r\nimport logo from \"../../images/nsgLogoSnipped.png\";\r\n\r\n\r\n// MATERIAL-UI COMPONENTS\r\nimport { Box, Container, Typography, AppBar } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n// const heightInRem = 3.6;\r\n// const height = `${heightInRem}rem`;\r\n// const halfHeight = `${heightInRem/2}rem`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    navbar: {\r\n        width: '100vw',\r\n        backgroundColor: theme.palette.primary.main,\r\n        color: theme.palette.common.white,\r\n        zIndex: '1200',\r\n        display: 'flex',\r\n        alignItems: 'flex-end',\r\n        // alignItems: 'stretch',\r\n    },\r\n    logo: {\r\n        width: '10%',\r\n        backgroundImage: `\r\n            url(${logo})  \r\n        `,\r\n        backgroundPosition: 'left bottom',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'auto 95%',\r\n    },\r\n}));\r\n\r\nexport default function Navbar(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <AppBar position='sticky' className={classes.navbar}>\r\n            <Container maxWidth='sm' disableGutters height='inherit' >\r\n                <Box display='flex' justifyContent='space-between'  >\r\n                    <Box className={classes.logo} />\r\n                    <Typography align='center' variant='h3' noWrap children={props.pageTitle} style={{ paddingTop: \"0.5rem\" }} />\r\n                    <MobileMenu />\r\n                </Box>\r\n            </Container>\r\n        </AppBar>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/TicTacToeCoachScreenshot860x800.aece09b1.png\";","export default __webpack_public_path__ + \"static/media/FifteenGameScreenshot860x800.779360ac.png\";","import React from 'react';\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\n// My Components\r\nimport Navbar from \"../components/Navbar/Navbar\"\r\n\r\n// MUI  components\r\nimport { Box, Container, Grid, Button, Typography, Card, CardActionArea, CardMedia, CardHeader } from '@material-ui/core'\r\n\r\n// Images\r\nimport TicTacToeCoachScreenshot from \"../images/TicTacToeCoachScreenshot860x800.png\";\r\nimport FifteenGameScreenshot from \"../images/FifteenGameScreenshot860x800.png\";\r\n\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    scrollingContainer: {\r\n        overflowY: \"scroll\"\r\n    },\r\n    cardRoot: {\r\n        display: \"flex\", \r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        backgroundColor: \"#eee\"\r\n    },\r\n    cardTitle: {\r\n        color: \"#000\",\r\n    },\r\n    cardImage: {\r\n        width: \"90%\",\r\n        paddingTop: \"86%\",\r\n        margin: \"0 0 1rem\",\r\n        borderRadius: \"0.3rem\"\r\n    },\r\n    cardButton: {\r\n        width: \"75%\",\r\n        margin: \"0 0 1rem\",\r\n        backgroundColor: theme.palette.primary.main,\r\n        textAlign: 'center',\r\n\r\n    },\r\n}));\r\n\r\nexport default function WelcomePage() {\r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <Navbar pageTitle={\"Tic Tac Toe and the 15 Game\"} />\r\n            <Container maxWidth='sm' className={classes.scrollingContainer} >\r\n                <Header />\r\n                <CardGrid />\r\n                <TeachingNotes />\r\n                <BehindTheScenes />\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nfunction Header() {\r\n    return (\r\n        <React.Fragment>\r\n            <Box p={2} />\r\n            <Typography align='center' variant=\"h4\" color='textPrimary' gutterBottom >\r\n               A Math Lesson in Disguise\r\n            </Typography>\r\n            <Typography align='justify' variant='body1' color='textPrimary' style={{ paddingBottom: \"2rem\" }} >\r\n                Math helps us see when things that seem unrelated on their surfaces are actually behaving according to\r\n                the same underlying rules. Try out these two games and you will see that they feel completely different to play.\r\n                They make you think in two very different ways. Behind the scenes though, they are the same game! The Bot follows the exact same instructions\r\n                when it is playing either game, the only thing that is different is how the game is depicted visually.\r\n            </Typography>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nfunction CardGrid() {\r\n    return (\r\n        <Grid container spacing={3} style={{ paddingBottom: \"2rem\" }}  >\r\n            <Grid item xs={6} >\r\n                <GameCard \r\n                    title=\"Tic Tac Toe\"\r\n                    image={TicTacToeCoachScreenshot}\r\n                    to='/tic_tac_toe_rules'\r\n                />\r\n            </Grid>\r\n            <Grid item xs={6} >\r\n                <GameCard\r\n                    title=\"The 15 Game\"\r\n                    image={FifteenGameScreenshot}\r\n                    to='/fifteen_rules'\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nfunction GameCard(props) {\r\n    const classes = useStyles();\r\n    let { title, image, to } = props\r\n\r\n    return (\r\n        <Card className={classes.cardRoot} >\r\n            <CardHeader \r\n                title={title}\r\n                className={classes.cardTitle}\r\n                titleTypographyProps={{\r\n                    variant: \"h5\",\r\n                    align: \"center\"\r\n                }}\r\n            />\r\n            <CardMedia \r\n                image={image}\r\n                className={classes.cardImage}\r\n            />\r\n            <Button\r\n                className={classes.cardButton}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                component={RouterLink}\r\n                to={to}\r\n                style={{ fontSize: \"1.25rem\", textTransform: \"none\" }}\r\n            >\r\n                Play Now!\r\n            </Button>\r\n        </Card>\r\n    )\r\n}\r\n\r\nfunction TeachingNotes(params) {\r\n    return (\r\n        <React.Fragment>\r\n            <Typography align='left' variant='h4' color='textPrimary' gutterBottom >\r\n                Teaching Notes\r\n            </Typography>\r\n            <Typography variant='body1' style={{ paddingBottom: \"1rem\" }} >\r\n                There is something here for learners of all ages and experience levels!  <br/> \r\n                The Rules page for each game includes tips for teachers on how to use this App in math class.\r\n            </Typography>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nfunction BehindTheScenes() {\r\n    return (\r\n        <Box style={{ paddingBottom: \"5rem\" }} >\r\n            <Typography align='left' variant='h4' color=\"textPrimary\" gutterBottom >\r\n                Behind the Scenes\r\n            </Typography>\r\n            <Typography variant='body1' gutterBottom >\r\n                This lesson is built with code that is open-source and available on my <a href=\"https://github.com/nolastemgarden\">Github</a> page.\r\n                If you have something to suggest, a bug to report, or you simply want to dig into the code to see how it works you are welcome visit the&emsp;\r\n                <a href=\"https://github.com/nolastemgarden/tic-tac-toe-and-the-fifteen-game\">repository</a> or to open an issue.\r\n            </Typography>\r\n        </Box>\r\n    )\r\n}\r\n\r\n// Finding an actual proof is going to take more than just playing lots of games and recording the results. \r\n// Even if you win a thousand games in a row, that does not prove you have a winning strategy, just that you have an \r\n// opponent who's not learning from their mistakes. To actually prove you have a winning strategy you will have to examine every \r\n// possibile play, not just the ones a particular opponent chooses.Making a tree - diagram that maps out all variations will help \r\n// you ensure that you have not overlooked any possible moves.There are shortcuts you can take based on symmetry.You may \r\n// find it helpful to develop your own shorthand notation for a position.You will certainly need to come up with a precice \r\n// definition of the word \"mistake\".Exploring possibilities, finding counterexamples, developing new forms of notation,\r\n// and formulating definitions... This IS what doing Math involves.\r\n\r\n// This lesson has something to offer students of all experience levels.\r\n// Kids of Elementary School age can use it to practice their fluency at mentally computing sums and differences.\r\n// Middle School aged kids will learn about combinations and permutations as they build their tree diagrams and consider all the\r\n// possible things that could happen next. \r\n// High School aged kids will learn what it means to write a rigorous proof and can apply their algebra skills to create a Magic Square from scratch.","import React from 'react';\r\n\r\nimport {\r\n    Link as RouterLink,\r\n} from \"react-router-dom\";\r\n\r\n// My Components\r\nimport Navbar from \"../components/Navbar/Navbar\"\r\n\r\n// MUI  components\r\nimport {\r\n    Box,\r\n    Container,\r\n    Grid,\r\n    Button,\r\n    Typography,\r\n} from '@material-ui/core'\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    scrollingContainer: {\r\n        overflowY: \"scroll\",\r\n        \"scrollbarWidth\": \"none\",       /* Firefox */\r\n        \"MsOverflowStyle\": \"none\",      /* IE and Edge */\r\n        \"::WebkitScrollbar\": {          /* Hide scrollbar for Chrome, Safari and Opera */\r\n            display: \"none\"\r\n        }\r\n    },\r\n    cardImage: {\r\n        width: \"90%\",\r\n        paddingTop: \"86%\",\r\n        margin: \"0 0 1rem\",\r\n        borderRadius: \"0.3rem\"\r\n    },\r\n    cardButton: {\r\n        width: \"75%\",\r\n        margin: \"0 0 1rem\",\r\n        backgroundColor: theme.palette.primary.main,\r\n        textAlign: 'center',\r\n\r\n    },\r\n}));\r\n\r\nexport default function TicTacToeRulesPage() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Navbar pageTitle={\"Tic Tac Toe\"} />\r\n            <Container className={classes.scrollingContainer}\r\n                maxWidth='sm'\r\n                style={{\r\n                    \"scrollbarWidth\": \"none\",       /* Firefox */\r\n                    \"MsOverflowStyle\": \"none\",      /* IE and Edge */\r\n                    \"::WebkitScrollbar\": {          /* Hide scrollbar for Chrome, Safari and Opera */\r\n                        display: \"none\"\r\n                    }\r\n                }}\r\n            >\r\n                <Title />\r\n                <PlayModeIconGrid />\r\n                <Rules />\r\n                <TeachingTips />\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nfunction Title() {\r\n    return (\r\n        <Typography align='center' color='textPrimary' variant='h1' gutterBottom style={{ paddingTop: \"2rem\" }} >\r\n            Tic Tac Toe\r\n        </Typography>\r\n    )\r\n}\r\nfunction PlayModeIconGrid() {\r\n    return (\r\n        <Grid container spacing={5} style={{ marginBottom: \"2rem\" }}  >\r\n            <Grid item xs={4} >\r\n                <IconCard\r\n                    title=\"Play vs. Human\"\r\n                    to='/tic_tac_toe_vs_human'\r\n                    iconClassName=\"fas fa-user-friends\"\r\n                />\r\n            </Grid>\r\n            <Grid item xs={4} >\r\n                <IconCard\r\n                    title=\"Play vs. Bot\"\r\n                    to='/tic_tac_toe_vs_bot'\r\n                    iconClassName=\"fas fa-robot\"\r\n                />\r\n            </Grid>\r\n            <Grid item xs={4} >\r\n                <IconCard\r\n                    title=\"Play with Coach\"\r\n                    to='/tic_tac_toe_with_coach'\r\n                    iconClassName=\"fas fa-graduation-cap\"\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\nfunction IconCard(props) {\r\n    const classes = useStyles();\r\n    let { title, to, iconClassName } = props\r\n\r\n    return (\r\n        <Button\r\n            component={RouterLink}\r\n            to={to}\r\n            fullWidth\r\n            style={{\r\n                border: \"solid white 1px\",\r\n                backgroundColor: \"black\",\r\n                height: \"12rem\",\r\n            }}\r\n        >\r\n            <Box style={{ display: \"flex\", flexDirection: \"column\", alignItems: 'center' }} >\r\n                <Typography\r\n                    children={title}\r\n                    variant=\"h5\"\r\n                    gutterBottom\r\n                    align=\"center\"\r\n                />\r\n                <Icon className={iconClassName}\r\n                    classes={{ root: classes.icon }}\r\n                    style={{\r\n                        width: \"10rem\",\r\n                        fontSize: \"6rem\",\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: 'center'\r\n                    }}\r\n                />\r\n            </Box>\r\n        </Button>\r\n    )\r\n}\r\nfunction Rules() {\r\n    return (\r\n        <React.Fragment>\r\n            <Typography align='left' variant=\"h4\" color='textPrimary' gutterBottom >\r\n                Rules of Play\r\n            </Typography>\r\n            <Typography align='justify' variant='body1' color='textPrimary' gutterBottom >\r\n                Tic-Tac-Toe is most often played as a paper and pencil game.\r\n                Two players, one using X's and the other using O's, take turns marking one cell in a three-by-three grid.\r\n                Both players seek to get a three-in-a-row, to have their mark in all three cells in a any row, column,\r\n                or diagonal. If the whole grid is filled and neither player has managed to get a three-in-a-row then the game\r\n                ends a draw.\r\n            </Typography>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nfunction TeachingTips() {\r\n    return (\r\n        <React.Fragment>\r\n            <Typography align='left' color='textPrimary' component='h4' variant='h4' gutterBottom style={{ paddingTop: \"1.5rem\" }} >\r\n                Teaching Tips\r\n            </Typography>\r\n            <Typography paragraph align='justify' component='p' variant='body1' gutterBottom >\r\n                Young kids have long enjoyed this classic paper and pencil game.\r\n                By the time they have played a few dozen rounds, most children get pretty good at it. \r\n                Most people never come close to exploring the full depth of Tic Tac Toe because they start getting bored \r\n                of it when they realize that most games end in a draw.  Do not under estimate this classic game!\r\n            </Typography>\r\n\r\n            <Typography align='left' variant='h4' color='textPrimary' gutterBottom >\r\n                Elementary School\r\n            </Typography>\r\n            <Typography align='left' variant='h6' color='textPrimary' gutterBottom >\r\n                Articulate Strategy\r\n            </Typography>\r\n            <Typography paragraph align='justify' component='p' variant='body1' gutterBottom >\r\n                I like to give my students in elementary school bonus questions at the end of math tests and Tic Tac Toe Tactics puzzles are \r\n                a favorite genre of bonus question.  Present positions where each player has made between 1 and 3 moves and ask questions like,\r\n                \"What move could X make to create a double attack?\" or \"How many asymetrical choices does O hav in this position? Which are good and which are bad moves?\"\r\n            </Typography>\r\n\r\n            <Typography align='left' variant='h4' color='textPrimary' gutterBottom >\r\n                Middle School\r\n            </Typography>\r\n            <Typography align='left' variant='h6' color='textPrimary' gutterBottom >\r\n                Develop Notation and Use Diagrams\r\n            </Typography>\r\n            <Typography paragraph align='justify' component='p' variant='body1'  >\r\n                Around Middle School I like to challenge kids to find (and write down) a step by step strategy that will guarantee \r\n                them a win in every game of Tic Tac Toe they play as long as they get to go first.\r\n                Once this challenge has been posed, leave students to their own devices for a while to invent ways\r\n                of writing down their moves and organizing their thoughts.\r\n            </Typography>\r\n            <Typography paragraph align='justify' component='p' variant='body1' gutterBottom >\r\n                Once they have had plenty of opportunity for creative struggle, you may introduce them to tree diagrams as a way to \r\n                organize their thinking. Each node on the tree represents a possible position. Each branch off of that node represents \r\n                one of the legal moves the player whose turn it is has to choose from. \r\n                Each layer of the tree represents a turn in the game. This is a great start, but solving the whole game this way using \r\n                tiny drawings of game positions will take many pages worth of paper. There are at least two things we can do to make our \r\n                solution take up leass space:\r\n            </Typography>\r\n            <Typography align='left' variant='h6' color='textPrimary' gutterBottom >\r\n                Develop a System of Notation\r\n            </Typography>\r\n            <Typography paragraph align='justify' component='p' variant='body1'  >\r\n                Rather than drawing tiny tic tac toe boards at every node of your tree diagram try assigning a name or a number to each \r\n                square on the board and write down just the last move that was made at each node.\r\n            </Typography>\r\n            <Typography align='left' variant='h6' color='textPrimary' gutterBottom >\r\n                Consider Symmetry\r\n            </Typography>\r\n            <Typography paragraph align='justify' component='p' variant='body1'  >\r\n                How many different ways is it possible for a game of tic tac toe to play out? On the first move of the game X has 9 choices and \r\n                on the second O had 8. Multipliying 9 x 8 x 7 x ... x 2 x 1 gives us 362880.  That is also known as \"nine factorial\" or \"9!\".\r\n                In any case, it is a lot of possible games to be examining!  But consider this: Does in make a difference <em>which</em> corner \r\n                X chooses on their first turn? No! X can start by taking a Corner, and Edge, or the Center.  It may look like 9 options but really \r\n                it is only 3 when we consider symmetry. We are avoiding duplicating work. Considering symmetry on just the first two moves of the \r\n                game cuts the number of possible positions we have to consider all the way down to 60480 or one sixth as many!\r\n                It is ok if your middle schoolers do not ultimately succeed at constructing a complete solution tree for tic tac toe, but make \r\n                sure that this task is put aside in a way that lets kids know it will be revisited later on when they are better equipped.\r\n            </Typography>\r\n\r\n\r\n            <Typography align='left' variant='h4' color='textPrimary' gutterBottom >\r\n                High School\r\n            </Typography>\r\n            <Typography align='left' variant='h6' color='textPrimary' gutterBottom >\r\n                Intro to Formal Proof\r\n            </Typography>\r\n            <Typography paragraph align='justify' color='textPrimary' component='p' variant='body1' gutterBottom >\r\n                All of mathematics is based on Proofs: Written logical arguments that leave no room for doubt.\r\n                The art of writing proofs is often introduced in a needlessly confusing way in school.\r\n                It is usually mixed into a geometry lesson that also introduces lots of new technical jargon dealing with similar and congruent triangles.\r\n                I think that kids should be introduced to the art of writing thorough arguments\r\n                in a context that is more familiar to them so that the beauty of what a proof is doesn't get lost in a pile of new vocabulary words.\r\n            </Typography>\r\n            <Typography variant='body1' gutterBottom >\r\n                When students are challenged to articulate a winning strategy for Tic Tac Toe they generally will come up with a few different \r\n                proposals. One by one, they or their classmates will find counterexamples for each one. \r\n                Eventually kids will intuit that this is an impossible task.\r\n                At this point, modify the objective: If you think there is no strategy that guarantees a win, then prove that instead!\r\n                Prove that you can get a draw in the worst case no matter what moves your opponent makes.\r\n            </Typography>\r\n            <Typography paragraph align='justify' color='textPrimary' component='p' variant='body1' gutterBottom >\r\n                Finding an actual proof is going to take more than just playing lots of games and recording the results.\r\n                Even if you won a thousand games in a row, that does not prove you have a winning strategy, just that you have an\r\n                opponent who's not learning from their mistakes. \r\n            </Typography>\r\n            <Typography paragraph align='justify' color='textPrimary' component='p' variant='body1' gutterBottom >\r\n                The point here is that we will not settle for a final answer that is just based on intuition.\r\n                Tic Tac Toe is a classic game with a reputation for being one of the simplest strategy games,\r\n                but this reputation causes many folks to underestimate its depth. It is very common for people\r\n                to asume that they have fully mastered Tic-Tac-Toe just because they know a way to never lose,\r\n                but a true master plays both offense and defense. Just because you can't force a win from starting\r\n                position doesn't mean you should give up looking for ways to win. Unforced errors happen all the time!\r\n            </Typography>\r\n            \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\n\r\nimport {\r\n    Link as RouterLink,\r\n} from \"react-router-dom\";\r\n\r\n// My Components\r\nimport Navbar from \"../components/Navbar/Navbar\"\r\n\r\n// MUI  components\r\nimport { \r\n    Box, \r\n    Container, \r\n    Grid, \r\n    Button, \r\n    Typography,\r\n} from '@material-ui/core'\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    scrollingContainer: {\r\n        overflowY: \"scroll\",\r\n        \"scrollbarWidth\": \"none\",       /* Firefox */\r\n        \"MsOverflowStyle\": \"none\",      /* IE and Edge */\r\n        \"::WebkitScrollbar\": {          /* Hide scrollbar for Chrome, Safari and Opera */\r\n            display: \"none\"\r\n        }\r\n    },\r\n    cardImage: {\r\n        width: \"90%\",\r\n        paddingTop: \"86%\",\r\n        margin: \"0 0 1rem\",\r\n        borderRadius: \"0.3rem\"\r\n    },\r\n    cardButton: {\r\n        width: \"75%\",\r\n        margin: \"0 0 1rem\",\r\n        backgroundColor: theme.palette.primary.main,\r\n        textAlign: 'center',\r\n\r\n    },\r\n}));\r\n\r\nexport default function FifteenRulesPage() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Navbar pageTitle={\"The 15 Game\"} />\r\n            <Container className={classes.scrollingContainer} \r\n                maxWidth='sm' \r\n                style={{\r\n                    \"scrollbarWidth\": \"none\",       /* Firefox */\r\n                    \"MsOverflowStyle\": \"none\",      /* IE and Edge */\r\n                    \"::WebkitScrollbar\": {          /* Hide scrollbar for Chrome, Safari and Opera */\r\n                        display: \"none\"\r\n                    }}}\r\n            >\r\n                <Title />\r\n                <PlayModeIconGrid />\r\n                {/* <CardGrid /> */}\r\n                <Rules />\r\n                <TeachingTips /> \r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nfunction Title() {\r\n    return (\r\n        <Typography align='center' color='textPrimary' variant='h1' gutterBottom style={{ paddingTop: \"2rem\" }} >\r\n            The Fifteen Game\r\n        </Typography>\r\n    )\r\n}\r\n\r\nfunction Rules() {\r\n    return (\r\n        <React.Fragment>\r\n            <Typography align='left' variant=\"h4\" color='textPrimary' gutterBottom >\r\n                Rules of Play\r\n            </Typography>\r\n            <Typography align='justify' variant='body1' color='textPrimary' gutterBottom >\r\n                The Fifteen Game is a two-player turn-based game.\r\n                It is traditionally played with a set of numbered cards but it can easily be adapted for\r\n                paper-and-pencil play. Each turn a player must claim one of the remaining numbered cards. \r\n            </Typography>\r\n            <Typography align='left' variant=\"h6\" color='textPrimary' gutterBottom >\r\n                Winning\r\n            </Typography>\r\n            <Typography align='justify' variant='body1' color='textPrimary' style={{ paddingBottom: \"1rem\" }} >\r\n                Both players have the same goal: be first to collect a set of exactly Three cards that adds up to exactly Fifteen.\r\n                You may collect more than three cards, play continues until someone wins or all nine cards are claimed.\r\n                If you do collect more than three cards you will have to ignore any extras when looking for winning combos.\r\n                If all nine cards are claimed and neither player has a three-card subset that sums to 15 then the game ends a draw.\r\n            </Typography>\r\n            <Typography align='left' variant='h6' color='textPrimary' gutterBottom >\r\n                Examples\r\n            </Typography>\r\n            <Typography align='justify' variant='body1' color='textPrimary' gutterBottom >\r\n                &#8226; &nbsp; Taking the 6 and 9 does NOT win. They add to 15, but it is only <u>two</u> cards.\r\n                <br /> &#8226; &nbsp; Taking 1 3 4 7 does NOT win. Though they sum to 15, it is <u>four</u> cards.\r\n                <br /> &#8226; &nbsp; Taking 6 7 8 does NOT win because they add up to <u>more</u> than 15.\r\n                <br /> &#8226; &nbsp; Taking 2 6 7 does WIN even if you have claimed additional cards.\r\n                <br /> &#8226; &nbsp; Other examples of winning combos:&nbsp;&nbsp;2 5 8&nbsp;&nbsp;and&nbsp;&nbsp;1 6 8\r\n            </Typography>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nfunction PlayModeIconGrid() {\r\n    return (\r\n        <Grid container spacing={5} style={{ marginBottom: \"2rem\" }}  >\r\n            <Grid item xs={1} />\r\n            <Grid item xs={5} >\r\n                <IconCard\r\n                    title=\"Play vs. Human\"\r\n                    to='/fifteen_vs_human'\r\n                    iconClassName=\"fas fa-user-friends\"\r\n                />\r\n                \r\n            </Grid>\r\n            <Grid item xs={5} >\r\n                <IconCard\r\n                    title=\"Play vs. Bot\"\r\n                    to='/fifteen_vs_bot'\r\n                    iconClassName=\"fas fa-robot\"\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\nfunction IconCard(props) {\r\n    const classes = useStyles();\r\n    let { title, to, iconClassName } = props\r\n\r\n    return (\r\n        <Button\r\n            component={RouterLink}\r\n            to={to}\r\n            fullWidth\r\n            style={{ \r\n                border: \"solid white 1px\", \r\n                backgroundColor: \"black\",\r\n                height: \"12rem\",\r\n            }}\r\n        >\r\n            <Box style={{ display: \"flex\", flexDirection: \"column\", alignItems: 'center' }} >\r\n                <Typography\r\n                    children={title}\r\n                    variant=\"h4\"\r\n                    gutterBottom\r\n                    align=\"center\"\r\n                />\r\n                <Icon className={iconClassName}\r\n                    classes={{ root: classes.icon }}\r\n                    style={{ \r\n                        width: \"10rem\",\r\n                        fontSize: \"6rem\",\r\n                        display: \"flex\", \r\n                        flexDirection: \"column\", \r\n                        alignItems: 'center'\r\n                    }}\r\n                />\r\n            </Box>\r\n        </Button>\r\n    )\r\n}\r\n\r\nfunction TeachingTips() {\r\n    return (\r\n        <React.Fragment>\r\n            <Typography align='left' color='textPrimary' component='h4' variant='h4' gutterBottom style={{ paddingTop: \"1.5rem\"}} >\r\n                Teaching Tips\r\n            </Typography>\r\n            <Typography paragraph align='justify' component='p' variant='body1' gutterBottom >\r\n                The Fifteen Game has something to offer for students of all ages and at levels of mathematical training. \r\n                Each round only takes takes a few minutes to play, making it an ideal for a brain-break activity during class.\r\n                If you want to set up a bracket and have a class-wide or school-wide championship tournament, I recommend the free tool available at <a href=\"https://brackethq.com/\" >Bracket HQ</a>.\r\n            </Typography>\r\n\r\n            <Typography align='left' variant='h4' color='textPrimary' gutterBottom >\r\n                Elementary School\r\n            </Typography>\r\n            <Typography align='left' variant='h6' color='textPrimary' gutterBottom >\r\n                Mental Math Fluency and Thinking Out Loud\r\n            </Typography>\r\n            <Typography paragraph align='justify' component='p' variant='body1' gutterBottom >\r\n                For students at the Elementary level, The Fifteen Game is a fantastic way to build automaticity at mentally computing sums and differences within 20 (a 1st grade standard).\r\n                Even for students who have mastered basic addition, trying to formulate strategies that involve offence and defense will push them to a new depth of understanding. \r\n                Make note of the pairs that add up to 10 and the fact that any of these four pairs is enough to win if you get the 5.\r\n                Be sure to get kids talking! Thinking out loud is a valuable life skill that games like this are excellent tools for teaching. \r\n                Keep playing against the bot in \"Easy\" mode until you can win well over half the time.\r\n            </Typography>\r\n\r\n            <Typography align='left' variant='h4' color='textPrimary' gutterBottom >\r\n                Middle School\r\n            </Typography>\r\n            <Typography align='left' variant='h6' color='textPrimary' gutterBottom >\r\n                Combinations and Permutations\r\n            </Typography>\r\n            <Typography paragraph align='justify'  component='p' variant='body1'  >\r\n                Students at the Middle School level who have already gained a feel for the game can take there understanding to the next level by exploring questions like:\r\n                <br /> &#8226; &nbsp; How many different three card combinations are there total? \r\n                <br /> &#8226; &nbsp; How many of those combinations sum to 15?\r\n                <br /> &#8226; &nbsp; What are the sums of all the combinations that don't sum to 15?\r\n                <br /> &#8226; &nbsp; Would this game be fun to play with a different targt number than 15?\r\n            </Typography>\r\n            <Typography paragraph align='justify' component='p' variant='body1' gutterBottom >\r\n                Entertaining questions like these will set kids up to learn about combinations and permutations. Once they have answered all of the above questions\r\n                you can inform kids that the Fifteen Game is actually Tic Tac Toe in disguise. Don't explain how though! As teachers we have to withold\r\n                some information to teach kids how to go get what they want with their own research!\r\n            </Typography>\r\n\r\n            <Typography align='left' variant='h4' color='textPrimary' gutterBottom >\r\n                High School\r\n            </Typography>\r\n            <Typography align='left' variant='h6' color='textPrimary' gutterBottom >\r\n                Similarity Beneath the Surface\r\n            </Typography>\r\n            <Typography paragraph align='justify' component='p' variant='body1' gutterBottom >\r\n                Many problems can be solved with less work if, instead of starting from scratch, you look for similarities between the problem\r\n                at hand and other problems that you already know how to solve. Have you <em>mastered</em> Tic Tac Toe to the point where you \r\n                never lose and also never miss a chance to win when you opponent slips up?  Does the bot still get the best of you at the 15 game \r\n                occasionally? Well you know by now that these two games are the same, make yourself a visual aide!\r\n            </Typography>\r\n            <Typography paragraph align='justify' component='p' variant='body1' gutterBottom >\r\n                Magic Squares are an ancient mathematical curiosity. They can be made in many sizes but here is what you will be trying to create:\r\n                <br /> &#8226; &nbsp; A three by three grid that has each of the numbers 1 through 9 in it one time each.\r\n                <br /> &#8226; &nbsp; The three digits in each row, column, and diagonal must add up to 15.\r\n                <br /> Start listing combos and put your algebra and logical deduction skills to work! What can you proove as you go?\r\n                There is more than one way to complete this task but ask yourself things like:\r\n                <br /> &#8226; &nbsp; What is special about the center cell? Which numbers can go there?\r\n                <br /> &#8226; &nbsp; What do all the numbers that go in corners have in common?\r\n            </Typography>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","// X always goes first! X and O will be shorthand for the player who goes First and the player who goes second.\r\n// PlayerOne and PlayerTwo are NOT markers of who goes first or second in any given game!\r\n// In the 15 game, PlayerOne and PlayerTWo are distinguished by dark-blue and light-blue\r\n\r\n// All functions exported from this module are used by PlayVsHuman.js PlayVsBot.js PlayWithCoach \r\n// There is some potential to add back in the 15 gameusing these same Game Logic helpers and a different version of the board.\r\n\r\n// Most functions here assume they will be called with a Move List String as the sole parameter. (just the exported ones?)\r\n\r\n////////////////////////////////////////////////////////////////\r\n// Constants: Trio List & Possible Positions & Outcome Maps\r\n////////////////////////////////////////////////////////////////\r\nexport const trioList = generateTrioList()\r\nfunction generateTrioList() {\r\n    let trioList = []\r\n    for (let i = 1; i <= 7; i++) {\r\n        for (let j = i + 1; j <= 8; j++) {\r\n            let k = complementOf(i + j)\r\n            if (k > j && k <= 9) {\r\n                let newTrio = [i, j, k]\r\n                trioList.push(newTrio)\r\n            }\r\n        }\r\n    }\r\n    return trioList\r\n}\r\nexport function complementOf(sumOfTwo) {\r\n    return (15 - sumOfTwo)\r\n}\r\n\r\nconst listOfPossiblePositions = getListOfPossiblePositions()\r\nfunction getListOfPossiblePositions() {\r\n    // Returns an array of arrays of strings\r\n    // Layer 1) indices 0 thru 9 correspond to the lengths of the move lists contained there\r\n    // Layer 2) an array containing all valid move lists of that length\r\n    // Layer 3) Move List string representations\r\n    let positionsList = [[\"\"]]\r\n    for (let parentLength = 0; parentLength < 9; parentLength++) {\r\n        let parentPositions = positionsList[parentLength]\r\n        let childPositions = parentPositions.map(parent => getChildren(parent)).flat()\r\n        positionsList.push(childPositions)\r\n    }\r\n    return positionsList\r\n}\r\n\r\n\r\n// export const outcomeMap = generatePositionToOutcomeMap()\r\nexport function generatePositionToOutcomeMap() {\r\n    let outcomeMap = new Map()\r\n    let list = listOfPossiblePositions\r\n    for (let length = 9; length >= 0; length--) {\r\n        let positions = list[length]\r\n        for (let p = 0; p < positions.length; p++) {\r\n            let ml = positions[p]\r\n            outcomeMap.set(ml, outcome(ml, outcomeMap))\r\n        }\r\n    }\r\n    return outcomeMap\r\n}\r\n\r\n////////////////////////////////////////////////////////////////\r\n//  Current Game Status: \"xWins\", \"oWins\", \"draw\",  \"xNext\", or \"oNext\"\r\n////////////////////////////////////////////////////////////////\r\nexport function status(ml) {\r\n    if (xHasWon(ml)) {\r\n        return (\"xWins\")\r\n    }\r\n    else if (oHasWon(ml)) {\r\n        return (\"oWins\")\r\n    }\r\n    else if (ml.length === 9) {\r\n        return (\"draw\")\r\n    }\r\n    else {\r\n        return nextPlayer(ml)  // \"xNext\" || \"oNext\"\r\n    }\r\n}\r\n////////////////////////////////////////////////////////////////\r\n// Game Status Helpers: BOOLEAN\r\n////////////////////////////////////////////////////////////////\r\nexport function nextPlayer(ml) {\r\n    return (ml.length % 2 === 0) ? \"xNext\" : \"oNext\"\r\n}\r\nexport function gameOverUsingStatus(status) {\r\n    return (status === \"xWins\" || status === \"oWins\" || status === \"draw\")\r\n}\r\nexport function gameOver(ml) {\r\n    return (ml.length === 9 || gameHasBeenWon(ml)) ? true : false\r\n}\r\nfunction gameHasBeenWon(ml) {\r\n    return (xHasWon(ml) || oHasWon(ml)) ? true : false\r\n}\r\nexport function xHasWon(ml) {\r\n    return sumsOfThree(xNumbers(ml)).includes(15)\r\n}\r\nexport function oHasWon(ml) {\r\n    return sumsOfThree(oNumbers(ml)).includes(15)\r\n}\r\nexport function gameDrawn(ml) {\r\n    return (ml.length === 9 && !gameHasBeenWon(ml))\r\n}\r\n// function gameWillBeDrawn(ml) {\r\n//     // TODO\r\n// }\r\nexport function moveNumber(ml) {\r\n    return (ml.length + 1)\r\n}\r\nexport function numbersInWin(ml) {\r\n    let Xs = xNumbers(ml)\r\n    let Os = oNumbers(ml)\r\n    let winningTrios = trioList.filter(trio =>\r\n        intersect(trio, Xs).length === 3 || intersect(trio, Os).length === 3\r\n    )\r\n    return winningTrios.flat()\r\n}\r\n\r\n////////////////////////////////////////////////////////////////\r\n//  Predicted and Final Game Outcomes: \"xWins\", \"oWins\", \"draw\"\r\n////////////////////////////////////////////////////////////////\r\nexport function outcome(ml, outcomeMap) {\r\n    return (gameOver(ml)) ? finalOutcome(ml) : predictedOutcome(ml, outcomeMap)\r\n}\r\nfunction finalOutcome(ml) {\r\n    let outcome = \"error\"\r\n    if (xHasWon(ml)) {\r\n        outcome = \"xWins\"\r\n    }\r\n    else if (oHasWon(ml)) {\r\n        outcome = \"oWins\"\r\n    }\r\n    else if (ml.length === 9) {\r\n        outcome = \"draw\"\r\n    }\r\n    return outcome\r\n}\r\nfunction predictedOutcome(ml, outcomeMap) {\r\n    let outcome = \"error\"\r\n    let childrensOutcomes = getChildren(ml).map(child => outcomeMap.get(child))\r\n    // console.log(`Position: ${position} --> childrensOutcomes: ${childrensOutcomes}`)\r\n    if (nextPlayer(ml) === \"xNext\") {\r\n        if (childrensOutcomes.includes(\"xWins\")) {\r\n            outcome = \"xWins\"\r\n        }\r\n        else if (childrensOutcomes.includes(\"draw\")) {\r\n            outcome = \"draw\"\r\n        }\r\n        else {\r\n            outcome = \"oWins\"\r\n        }\r\n    }\r\n    else {\r\n        if (childrensOutcomes.includes(\"oWins\")) {\r\n            outcome = \"oWins\"\r\n        }\r\n        else if (childrensOutcomes.includes(\"draw\")) {\r\n            outcome = \"draw\"\r\n        }\r\n        else {\r\n            outcome = \"xWins\"\r\n        }\r\n    }\r\n    return outcome\r\n}\r\n\r\n\r\n\r\n\r\n\r\n////////////////////////////////////////////////////////////////\r\n// Isolate each players' claimed numbers: ARRAY(NUM)\r\n////////////////////////////////////////////////////////////////\r\nexport function xNumbers(ml) {\r\n    return moveListStringToArray(ml).filter((move, turn) => turn % 2 === 0)\r\n}\r\nexport function oNumbers(ml) {\r\n    return moveListStringToArray(ml).filter((move, turn) => turn % 2 === 1)\r\n}\r\n\r\n\r\nexport function moveListStringToArray(ml) {               // \"123\" --> [1,2,3]\r\n    return Array.from(ml).map(e => Number(e))\r\n}\r\n\r\nexport function getChildren(ml) {\r\n    let children = []\r\n    getValidMoves(ml).forEach(move => children.push(ml + move))\r\n    // this.validMoves(ml).forEach(move => children.push(ml + move))\r\n    return children\r\n}\r\nexport function getValidMoves(ml) {\r\n    return (gameOver(ml)) ? [] : availableNumbers(ml)\r\n}\r\nexport function availableNumbers(ml) {\r\n    let availableNumbers = new Set([1, 2, 3, 4, 5, 6, 7, 8, 9])\r\n    for (let i = 0; i < ml.length; i++) {\r\n        availableNumbers.delete(parseInt(ml.charAt(i)))\r\n    }\r\n    // console.log(`Available Squares: ${availableNumbers}`)\r\n    return Array.from(availableNumbers)\r\n}\r\nexport function getParent(ml) {\r\n    return ml.slice(0, ml.length - 1)\r\n}\r\n\r\n////////////////////////////////////////////////////////////////\r\n// Lowest Level Logic\r\n////////////////////////////////////////////////////////////////\r\nexport function intersect(listOne, listTwo) {\r\n    return listOne.filter(item => listTwo.includes(item))\r\n}\r\nfunction sumsOfThree(moveSet) {\r\n    let sums = []\r\n    if (moveSet.length < 3) {\r\n        return sums\r\n    }\r\n    for (let i = 0; i < moveSet.length - 2; i++) {\r\n        for (let j = i + 1; j < moveSet.length - 1; j++) {\r\n            for (let k = j + 1; k < moveSet.length; k++) {\r\n                let sum = moveSet[i] + moveSet[j] + moveSet[k]\r\n                sums.push(sum)\r\n            }\r\n        }\r\n    }\r\n    return sums\r\n}\r\nexport function sumsOfTwo(moveSet) {\r\n    let sums = []\r\n    if (moveSet.length < 2) {\r\n        return sums\r\n    }\r\n    for (let i = 0; i < moveSet.length - 1; i++) {\r\n        for (let j = i + 1; j < moveSet.length; j++) {\r\n            let sum = moveSet[i] + moveSet[j]\r\n            sums.push(sum)\r\n        }\r\n    }\r\n    return sums\r\n}\r\n\r\n\r\n\r\n// function factorial(num) {\r\n//     console.assert(num >= 0 && num <=9, `Factorial called with a number out of this game's range!`)\r\n//     let product = 1\r\n//     for (let i = 1; i <= num; i++) {\r\n//         product = product * i\r\n//     }\r\n//     return product\r\n//     // This led to a fun research rabbit hole about how to more efficiently compute factorials using Paschals Triangle\r\n// }\r\n\r\n// function inEfficientUnclaimedNumbers(ml) {\r\n//     let unclaimedNumbers = [];\r\n//     for (let i = 1; i <= 9; i++) {\r\n//         if (!ml.includes(i)) {\r\n//             unclaimedNumbers.push(i)\r\n//         }\r\n//     }\r\n//     // console.log(`List Empty Squares: ${emptySquaresList}`)\r\n//     return unclaimedNumbers;\r\n// }\r\n\r\n","import {\r\n    status,\r\n    xNumbers,\r\n    oNumbers,\r\n    trioList,\r\n    // outcomeMap,\r\n    intersect,\r\n    availableNumbers,\r\n    moveListStringToArray\r\n} from \"./GameLogic\";\r\n\r\nexport function highlightWins(ml) {\r\n    let colors = Array(10).fill('noColor')\r\n    numbersInWin(ml).forEach(num => colors[num] = 'win')\r\n    return colors\r\n}\r\n\r\nexport function numbersInWin(ml) {\r\n    let Xs = xNumbers(ml)\r\n    let Os = oNumbers(ml)\r\n    let winningTrios = trioList.filter(trio =>\r\n        intersect(trio, Xs).length === 3 || intersect(trio, Os).length === 3\r\n    )\r\n    return winningTrios.flat()\r\n}\r\n\r\nexport function getBoardIcons(ml) {\r\n    let data = Array(10).fill('_');  // Start with an array representing a board of NINE empty squares\r\n    let mlArray = moveListStringToArray(ml)\r\n    mlArray.forEach((squareId, turn) => {\r\n        data[squareId] = (turn % 2 === 0) ? 'x' : 'o'\r\n    })\r\n    return data;  // this method only deals with current board position, not hypotheticals.  Thus, it wants to use a version of helper squaresClaimedByPlayer() that does not require a moveList be explicitly passed in. \r\n}\r\n\r\n\r\n\r\nexport function getBoardHints(ml, outcomeMap) {\r\n    let colors = Array(10).fill('noColor')\r\n    availableNumbers(ml).forEach(num => {\r\n        let outcome = outcomeMap.get(ml + num.toString())\r\n        colors[num] = getHintColor(outcome, ml)\r\n    })\r\n    console.log(`COLORS: ${colors}`)\r\n    return colors\r\n}\r\n\r\nfunction getHintColor(outcome, ml) {\r\n    let gameStatus = status(ml)\r\n    if (outcome === \"draw\") {\r\n        return \"draw\"\r\n    }\r\n    else if (gameStatus === \"xNext\") {\r\n        return (outcome === \"xWins\") ? \"win\" : \"lose\"\r\n    }\r\n    else if (gameStatus === \"oNext\") {\r\n        return (outcome === \"oWins\") ? \"win\" : \"lose\"\r\n    }\r\n    else {\r\n        console.error(`Error in Get Hint Color`);\r\n    }\r\n}","import React from 'react';\r\n\r\n// My Logical Components\r\n\r\n// My Components\r\n\r\n// MUI  components\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    square: {\r\n        width: '15vh',\r\n        backgroundColor: theme.palette.common.white,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    iconX: {\r\n        width: '100%',\r\n        height: '100%',\r\n        color: theme.palette.common.black\r\n    },\r\n    iconO: {\r\n        width: '80%',\r\n        height: '80%',\r\n        color: theme.palette.common.black\r\n    },\r\n    noColor: {\r\n        backgroundColor: '#ddd',\r\n    },\r\n    win: {\r\n        backgroundColor: '#3B3'\r\n    },\r\n    draw: {\r\n        backgroundColor: '#FF3'\r\n    },\r\n    lose: {\r\n        backgroundColor: '#F44'\r\n    },\r\n}));\r\n\r\nexport default function Square(props) {\r\n    const classes = useStyles();\r\n\r\n    let squareIcon;\r\n    switch (props.icon) {\r\n        case 'x':\r\n            squareIcon = <ClearIcon className={classes.iconX} />\r\n            break;\r\n        case 'o':\r\n            squareIcon = <RadioButtonUncheckedIcon className={classes.iconO} />\r\n            break;\r\n        case '_':\r\n            // squareIcon = <Typography variant='h3' color='textSecondary' >{props.number}</Typography> // \r\n            break;\r\n        default:\r\n            console.error(\"Square passed symbol not 'x' 'o' or '_'\");\r\n    }\r\n\r\n    let squareColorClassName;\r\n    switch (props.color) {\r\n        case 'claimed':\r\n            squareColorClassName = `${classes.square} ${classes.claimed} `\r\n            break;\r\n        case 'unclaimed':\r\n            squareColorClassName = `${classes.square} ${classes.unclaimed} `\r\n            break;\r\n        case 'noColor':\r\n            squareColorClassName = `${classes.square} ${classes.noColor} `\r\n            break;\r\n        case 'draw':\r\n            squareColorClassName = `${classes.square} ${classes.draw} `\r\n            break;\r\n        case 'win':\r\n            squareColorClassName = `${classes.square} ${classes.win} `\r\n            break;\r\n        case 'lose':\r\n            squareColorClassName = `${classes.square} ${classes.lose} `\r\n            break;\r\n        default:\r\n            squareColorClassName = `${classes.square} `\r\n    }\r\n\r\n    return (\r\n        <Paper\r\n            number={props.number}\r\n            elevation={4}\r\n            className={squareColorClassName}\r\n            onClick={() => props.handleBoardClick(props.number.toString())}\r\n        >\r\n            {squareIcon}\r\n        </Paper>\r\n    )\r\n}","import React from 'react';\r\n\r\n// My Logical Components\r\nimport { status } from \"../../logic/GameLogic\";\r\nimport {\r\n    highlightWins,\r\n    getBoardIcons,\r\n    getBoardHints,\r\n} from \"../../logic/BoardLogic\";\r\n\r\n// My Components\r\nimport Square from \"./Square\";\r\n\r\n// MUI  components\r\nimport Box from '@material-ui/core/Box';\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    board: {\r\n        width: 'min(50vh, 100%)',\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n    },\r\n    row: {\r\n        // border: 'solid purple 1px',\r\n        width: '100%',  \r\n        height: '15vh',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around',\r\n    },\r\n    \r\n}));\r\n\r\nexport default function Board(props) {\r\n    const { outcomeMap } = props\r\n    \r\n    const classes = useStyles();    \r\n    const boardNumbers = [2,9,4,7,5,3,6,1,8]\r\n    let moveList = props.moveList\r\n\r\n    let boardIcons = getBoardIcons(moveList)\r\n    let boardColors = getBoardColors(moveList)\r\n    \r\n    let squares = []\r\n    boardNumbers.forEach(num => {\r\n        let newSquare =\r\n            <Square\r\n                key={num}\r\n                number={num}\r\n                icon={boardIcons[num]}\r\n                color={boardColors[num]}\r\n                handleBoardClick={props.handleBoardClick}\r\n            />\r\n        squares.push(newSquare);\r\n    })\r\n\r\n    return (\r\n        <Box className={classes.board} >\r\n            <Box className={classes.row} >\r\n                {squares.slice(0,3)}\r\n            </Box>\r\n            <Box className={classes.row} >\r\n                {squares.slice(3, 6)}\r\n            </Box>\r\n            <Box className={classes.row} >\r\n                {squares.slice(6, 9)}\r\n            </Box>\r\n        </Box>\r\n\r\n        \r\n    )\r\n\r\n    function getBoardColors(ml) {\r\n        let gameStatus = status(ml)\r\n        if (gameStatus === \"xWins\" || gameStatus === \"oWins\") {\r\n            return highlightWins(ml)\r\n        }\r\n        else if (props.showHints === true) {\r\n            return getBoardHints(ml, outcomeMap)\r\n        }\r\n        else {\r\n            return Array(10).fill('noColor')\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\n// My Logical Components\r\nimport {\r\n    numbersInWin,\r\n    moveListStringToArray\r\n} from \"../../logic/GameLogic\";\r\n// import {\r\n//     highlightWins,\r\n//     getBoardHints,\r\n// } from \"../../logic/BoardLogic\";\r\n\r\n// My Components\r\n// import NumCard from \"./NumCard\";\r\n\r\n// MUI  components\r\nimport Box from '@material-ui/core/Box';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    board: {\r\n        width: 'min(100%, 720px)',\r\n        margin: '0 auto',\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n    },\r\n    row: {\r\n        // border: 'solid purple 1px',\r\n        width: '100%',\r\n        height: '22vh',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n    },\r\n    card: {\r\n        width: '18%',\r\n        margin: '0 1%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: theme.palette.common.black,\r\n        backgroundColor: theme.palette.common.white,\r\n\r\n    },\r\n    playerOne: {\r\n        backgroundColor: theme.palette.playerOne.backgroundColor,\r\n        color: theme.palette.playerOne.text,\r\n    },\r\n    playerTwo: {\r\n        backgroundColor: theme.palette.playerTwo.backgroundColor,\r\n        color: theme.palette.playerTwo.text,\r\n    },\r\n    highlightWins: {\r\n        backgroundColor: theme.palette.primary.main,\r\n\r\n    },\r\n\r\n}));\r\n\r\n// What does the Board NEED to render all 9 number cards? \r\n// Needs to know each cards num, const in order.\r\n// Needs each cards CLAIM status, X O or _\r\n// Needs bool, if card is part of win. \r\n\r\nexport default function FifteenBoard(props) {\r\n    const classes = useStyles();\r\n\r\n    let ml = props.moveList\r\n    // let gameStatus = status(ml) \r\n    \r\n\r\n    const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]\r\n    \r\n    let claims = getClaims(ml)  // An Array of 'x' 'o' & '_'\r\n    function getClaims(ml) {\r\n        let data = Array(10).fill('_');\r\n        let mla = moveListStringToArray(ml)\r\n        mla.forEach((num, turn) => {\r\n            data[num] = (turn % 2 === 0) ? 'x' : 'o'\r\n        })\r\n        console.log(`Claims data: ${data}`);\r\n        return data\r\n    }\r\n\r\n    let wins = getWins(ml)       // An Array of booleans, true if part of winning trio\r\n    function getWins(ml) {\r\n        let data = Array(10).fill(false)\r\n        numbersInWin(ml).forEach(num => data[num] = true)\r\n        return data\r\n    }\r\n\r\n    \r\n    \r\n    let numCards = []\r\n    \r\n    numbers.forEach(num => {\r\n        let newNumCard =\r\n            <Card\r\n                key={num}\r\n                \r\n                num={num}\r\n                claim={claims[num]}\r\n                border={wins[num]}\r\n                handleBoardClick={props.handleBoardClick}\r\n            />\r\n        numCards.push(newNumCard);\r\n    })\r\n\r\n    return (\r\n        <Container maxWidth='md' >\r\n            <Box className={classes.board} >\r\n                <Box className={classes.row} >\r\n                    {numCards.slice(0, 5)}\r\n                </Box>\r\n                <Box className={classes.row} >\r\n                    {numCards.slice(5, 9)}\r\n                </Box>\r\n            </Box>\r\n        </Container>\r\n\r\n        \r\n    )\r\n}\r\n\r\nfunction Card(props) {\r\n    const classes = useStyles();\r\n\r\n\r\n    let cardStatusClassName\r\n    switch (props.claim) {\r\n        case 'x':\r\n            cardStatusClassName = `${classes.card} ${classes.playerOne} `\r\n            break;\r\n        case 'o':\r\n            cardStatusClassName = `${classes.card} ${classes.playerTwo} `\r\n            break;\r\n        case '_':\r\n            cardStatusClassName = `${classes.card} `\r\n            break;\r\n        default:\r\n            throw console.error(`Card passed invalid claim: ${props.color}`);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Box number={props.num}\r\n            className = { cardStatusClassName }\r\n            onClick = {() => props.handleBoardClick(props.num)}\r\n            border={(props.border === true) ? 'solid green 8px' : ''}\r\n            borderRadius='1rem'\r\n        >\r\n                <Typography color='inherit' variant='h1' >\r\n                    {props.num}\r\n                </Typography>\r\n        </Box>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\n\r\nimport { status } from \"../../../logic/GameLogic\";\r\n\r\n// MUI Components\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function StatusHeader(props) {\r\n    const gameStatus = status(props.moveList);\r\n\r\n    function statusMessage(status) {\r\n        if (props.game === 'tic-tac-toe') {\r\n            switch (status) {\r\n                case \"xWins\":\r\n                    return \"Game Over. X Wins!\"\r\n                case \"oWins\":\r\n                    return \"Game Over. O Wins!\"\r\n                case \"draw\":\r\n                    return \"Game Over! Draw.\"\r\n                case \"xNext\":\r\n                    return \"It is X's turn.\"\r\n                case \"oNext\":\r\n                    return \"It is O's turn.\"\r\n                default:\r\n                    return \"Error\";\r\n            }\r\n        }\r\n        else if (props.game === 'fifteen-game') {\r\n            switch (status) {\r\n                case \"xWins\":\r\n                    return \"Game Over. Yellow Wins!\"\r\n                case \"oWins\":\r\n                    return \"Game Over. Blue Wins!\"\r\n                case \"draw\":\r\n                    return \"Game Over! Draw.\"\r\n                case \"xNext\":\r\n                    return \"It is Yellow's turn.\"\r\n                case \"oNext\":\r\n                    return \"It is Blue's turn.\"\r\n                default:\r\n                    return \"Error\";\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Typography color=\"textPrimary\" align='center' component='h1' variant='h4' noWrap gutterBottom>\r\n            {statusMessage(gameStatus)}\r\n        </Typography>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport { gameOverUsingStatus } from \"../../../logic/GameLogic\";\r\n\r\n// MUI Components\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function StatusHeader(props) {\r\n    const gameOver = gameOverUsingStatus(props.status)\r\n    const gameNumber = props.gameNumber\r\n    return gameOver ? \"\":\r\n        <Typography color = \"textPrimary\" align = 'center' component = 'h1' variant = 'h4' noWrap gutterBottom>\r\n            Game&nbsp;{ gameNumber }:\r\n        </Typography>\r\n    \r\n}\r\n","import React from 'react';\r\n\r\n// Custom Components\r\n\r\n// MUI Components\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    record: {\r\n        color: theme.palette.common.white,\r\n        margin: '0rem 35%',\r\n        width: '30%',\r\n        height: '4.5rem',\r\n        fontSize: '1.1rem',\r\n    },\r\n\r\n}));\r\n\r\nexport default function TicTacToeRecord(props) {\r\n    const classes = useStyles();\r\n\r\n    let playerOne = \"\"\r\n    let playerTwo = \"\"\r\n    if (props.playMode === \"humanVsHuman\") {\r\n        playerOne = \"Player X\"\r\n        playerTwo = \"Player O\"\r\n    }\r\n    else if (props.playMode === \"humanVsBot\") {\r\n        if (props.humanGoesFirst) {\r\n            playerOne = \"X Human\"\r\n            playerTwo = \"O Bot\"\r\n        }\r\n        else {\r\n            playerOne = \"O Human\"\r\n            playerTwo = \"X Bot\"\r\n        }\r\n    }\r\n    else {\r\n        console.error(`WinLossDrawRecord tried to render with invalid playMode prop: ${props.playMode}`)\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.record} >\r\n            <Grid container >\r\n                <Grid item xs={9}>\r\n                    <Typography color=\"textPrimary\" align='left' component='h3' variant='h5' noWrap >\r\n                        {playerOne}:\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <Typography color=\"textPrimary\" align='right' component='h3' variant='h5' noWrap >\r\n                        {props.record[0]}\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container >\r\n                <Grid item xs={9}>\r\n                    <Typography color=\"textPrimary\" align='left' component='h3' variant='h5' noWrap >\r\n                        {playerTwo}:\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <Typography color=\"textPrimary\" align='right' component='h3' variant='h5' noWrap >\r\n                        {props.record[1]}\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container >\r\n                <Grid item xs={9}>\r\n                    <Typography color=\"textPrimary\" align='left' component='h3' variant='h5' noWrap >\r\n                        Draw:\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <Typography color=\"textPrimary\" align='right' component='h3' variant='h5' noWrap >\r\n                        {props.record[2]}\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </Box>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\n\r\n// Custom Components\r\n// import TurnArrowIcon from './TurnArrowIcon';\r\n\r\n// MUI Components\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    record: {\r\n        color: theme.palette.common.white,\r\n        margin: '0rem 25%',\r\n        width: '50%',\r\n        height: '4.5rem',\r\n        fontSize: '1.1rem',\r\n    },\r\n    recordRow: {\r\n        display: 'flex',\r\n        justifyContent: 'end',\r\n        alignItems: 'center'\r\n    },\r\n    colorTileOne: {\r\n        width: '1.2rem',\r\n        height: '1.2rem',\r\n        borderRadius: '15%',\r\n        margin: '0 .5rem 0 auto',\r\n        backgroundColor: theme.palette.playerOne.backgroundColor\r\n    },\r\n    colorTileTwo: {\r\n        width: '1.2rem',\r\n        height: '1.2rem',\r\n        borderRadius: '15%',\r\n        margin: '0 .5rem 0 auto',\r\n        backgroundColor: theme.palette.playerTwo.backgroundColor\r\n    }\r\n}));\r\n\r\nfunction ColorTile(props) {\r\n    const classes = useStyles();\r\n\r\n    return (props.player === \"playerOne\") ?\r\n        <Box className={classes.colorTileOne} /> :\r\n        <Box className={classes.colorTileTwo} />\r\n}\r\n\r\nexport default function FifteenRecord(props) {\r\n    const classes = useStyles();\r\n\r\n\r\n    let playerOneName = \"\"\r\n    let playerTwoName = \"\"\r\n    if (props.playMode === \"humanVsHuman\") {\r\n        playerOneName = \"Player One\"\r\n        playerTwoName = \"Player Two\"\r\n    }\r\n    else if (props.playMode === \"humanVsBot\") {\r\n        playerOneName = \"Human\"\r\n        playerTwoName = \"Bot\"\r\n    }\r\n    else {\r\n        console.error(`WinLossDrawRecord tried to render with invalid playMode prop: ${props.playMode}`)\r\n    }\r\n\r\n    \r\n    let playerOneSymbol = \"\"\r\n    let playerTwoSymbol = \"\"\r\n    if (props.playMode === \"humanVsHuman\") {\r\n        playerOneSymbol = <ColorTile player='playerOne' />\r\n        playerTwoSymbol = <ColorTile player='playerTwo' />\r\n    }\r\n    else if (props.playMode === \"humanVsBot\") {\r\n        if (props.humanGoesFirst === true) {\r\n            playerOneSymbol = <ColorTile player='playerOne' />\r\n            playerTwoSymbol = <ColorTile player='playerTwo' />\r\n        }\r\n        else {\r\n            playerOneSymbol = <ColorTile player='playerTwo' />\r\n            playerTwoSymbol = <ColorTile player='playerOne' />\r\n        }\r\n    }\r\n    else {\r\n        console.error(`WinLossDrawRecord tried to render with invalid playMode prop: ${props.playMode}`)\r\n    }\r\n    \r\n\r\n    return (\r\n        <Box className={classes.record} >\r\n            <Grid container className={classes.recordRow}>\r\n                {/* <Grid item xs={2}>\r\n                    <TurnArrowIcon\r\n                        status={props.status}\r\n                    />\r\n                </Grid> */}\r\n                <Grid item xs={2}>\r\n                    {playerOneSymbol}\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                    <Typography color=\"textPrimary\" align='left' component='h3' variant='h5' noWrap >\r\n                        {playerOneName}:\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <Typography color=\"textPrimary\" align='right' component='h3' variant='h5' noWrap >\r\n                        {props.record[0]}\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container className={classes.recordRow}>\r\n                {/* <Grid item xs={2}>\r\n                    <TurnArrowIcon\r\n                        status={props.status}\r\n                    />\r\n                </Grid> */}\r\n                <Grid item xs={2}>\r\n                    {playerTwoSymbol}\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                    <Typography color=\"textPrimary\" align='left' component='h3' variant='h5' noWrap >\r\n                        {playerTwoName}:\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <Typography color=\"textPrimary\" align='right' component='h3' variant='h5' noWrap >\r\n                        {props.record[1]}\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container className={classes.recordRow}>\r\n                {/* <Grid item xs={2}>\r\n\r\n                </Grid> */}\r\n                <Grid item xs={2}>\r\n\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                    <Typography color=\"textPrimary\" align='left' component='h3' variant='h5' noWrap >\r\n                        Draw:\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <Typography color=\"textPrimary\" align='right' component='h3' variant='h5' noWrap >\r\n                        {props.record[2]}\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </Box>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\n\r\n// My Components\r\n\r\n// MUI Components\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// MUI Icons\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\n\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        width: '100%',\r\n        height: '2.1rem',\r\n        fontSize: '1rem',\r\n    },\r\n}));\r\n\r\nexport default function NewGameButton(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Button\r\n            className={classes.button}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => props.handleNewGameClick()}\r\n            disabled={!props.gameOver}\r\n        >\r\n            <Box mr={2} display=\"flex\" alignContent=\"center\" >\r\n                <ReplayIcon />\r\n            </Box>\r\n            New&nbsp;Game\r\n        </Button>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport { moveNumber } from \"../../logic/GameLogic\";\r\n\r\n\r\n// MUI Components\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// MUI Icons\r\nimport UndoIcon from '@material-ui/icons/Undo';\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        width: '100%',\r\n        height: '2.1rem',\r\n        fontSize: '1rem',\r\n    },\r\n}));\r\n\r\nexport default function UndoButton(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Button\r\n            className={classes.button}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => props.handleUndoClick()}\r\n            disabled={props.gameOver || moveNumber(props.moveList) === 1}\r\n        >\r\n            <Box mr={2} display=\"flex\" alignContent=\"center\" >\r\n                <UndoIcon />\r\n            </Box>\r\n            Undo\r\n        </Button>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\n// import { moveNumber, status } from \"../../logic/GameLogic\";\r\n\r\n// Custom Components\r\nimport StatusHeader from './Parts/StatusHeader';\r\nimport GameNumber from './Parts/GameNumber';\r\nimport TicTacToeRecord from '../../components/Panels/Parts/TicTacToeRecord'\r\nimport FifteenRecord from '../../components/Panels/Parts/FifteenRecord'\r\n\r\nimport NewGameButton from \"../Buttons/NewGameButton\";\r\nimport UndoButton from \"../Buttons/UndoButton\";\r\n\r\n// MUI Components\r\nimport {Box, Grid, Container} from '@material-ui/core';\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    panel: {\r\n        width: '100%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    infoArea: {\r\n        flex: '1 0 50%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        padding: '1.0rem',\r\n    },\r\n    controls: {\r\n        flex: '1 0 50%',\r\n    },\r\n}));\r\n\r\nexport default function HumanPanel(props) {\r\n    const classes = useStyles();\r\n    \r\n    function gameOver(s = props.status) {\r\n        return (s === \"xWins\" || s === \"oWins\" || s === \"draw\")\r\n    }\r\n\r\n    let record = (props.game === \"tic-tac-toe\") ?\r\n        <TicTacToeRecord\r\n            playMode=\"humanVsHuman\"\r\n            record={props.record}\r\n            status={props.status}\r\n        /> :\r\n        <FifteenRecord\r\n            playMode=\"humanVsHuman\"\r\n            record={props.record}\r\n            status={props.status}\r\n        />\r\n\r\n    return (\r\n        <Container maxWidth='sm' className={classes.panel} >\r\n            <Box className={classes.infoArea} >\r\n                <Box display=\"flex\" justifyContent=\"center\" color=\"textPrimary\" >\r\n                    <GameNumber\r\n                        status={props.status}\r\n                        gameNumber={props.gameNumber}\r\n                    />&nbsp;&nbsp;&nbsp;\r\n                    <StatusHeader\r\n                        game={props.game}\r\n                        moveList={props.moveList}\r\n                        humanGoesFirst={props.humanGoesFirst}\r\n                    />\r\n                </Box>\r\n                {record}\r\n            </Box>\r\n            <Grid container spacing={3} className={classes.controls} >\r\n                <Grid item xs={6} >\r\n                    <NewGameButton\r\n                        gameOver={gameOver()}\r\n                        handleNewGameClick={props.handleNewGameClick}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={6}  >\r\n                    <UndoButton\r\n                        moveList={props.moveList}\r\n                        gameOver={gameOver()}\r\n                        handleUndoClick={props.handleUndoClick}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\n","import React, { useState } from 'react';\r\n\r\n// My Logical Components\r\nimport {\r\n    status,\r\n    gameOver,\r\n    xHasWon, \r\n    oHasWon, \r\n    gameDrawn,\r\n} from \"../logic/GameLogic\";\r\n\r\n// My React  Components\r\nimport Navbar from \"../components/Navbar/Navbar\"\r\nimport TicTacToeBoard from \"../components/Boards/TicTacToeBoard\"\r\nimport FifteenBoard from \"../components/Boards/FifteenBoard\"\r\nimport HumanPanel from \"../components/Panels/HumanPanel\"\r\n\r\n// MUI  components\r\nimport Box from '@material-ui/core/Box';\r\n\r\n// Custom Styling\r\nimport '../styles/TicTacToe.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        height: '97%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    boardArea: {\r\n        display: 'flex',\r\n        flex: '1 0 50vh',\r\n        justifyContent: 'center',\r\n        marginTop: \"1rem\"\r\n    },\r\n    panelArea: {\r\n        color: theme.palette.common.white,\r\n        backgroundColor: theme.palette.common.black,\r\n        display: 'flex',\r\n        flex: '1 0 45vh',\r\n    },\r\n}));\r\n\r\nexport default function PlayVsHuman(props) {\r\n    const classes = useStyles();\r\n\r\n    let [moveList, setMoveList] = useState(\"\");\r\n    let [gameNumber, setGameNumber] = useState(1);     \r\n    let [record, setRecord] = useState([0, 0, 0]);     \r\n\r\n    console.assert(props.game === \"tic-tac-toe\" || props.game === \"fifteen-game\")\r\n    let board = (props.game === \"tic-tac-toe\") ? \r\n        <TicTacToeBoard\r\n            moveList={moveList}\r\n            handleBoardClick={handleBoardClick}\r\n            showHints={false}\r\n        /> : \r\n        <FifteenBoard\r\n            moveList={moveList}\r\n            handleBoardClick={handleBoardClick}\r\n            showHints={false}\r\n        />\r\n\r\n    \r\n    return (\r\n        <Box className={classes.root} >\r\n            <Navbar pageTitle={(props.game === \"tic-tac-toe\") ? \"Tic Tac Toe vs. Human\" : \"15 Game vs. Human\"} />\r\n            \r\n            <Box className={classes.boardArea} children={board} />\r\n            <Box className={classes.panelArea}>\r\n                <HumanPanel\r\n                    game={props.game}\r\n                    gameNumber={gameNumber}\r\n                    record={record}\r\n                    moveList={moveList}\r\n                    status={status(moveList)}\r\n                    handleUndoClick={handleUndoClick}\r\n                    handleNewGameClick={handleNewGameClick}\r\n                />\r\n            </Box>\r\n        </Box>\r\n    )\r\n\r\n    \r\n    ///////////////////////////////////////////////////\r\n    // CLICK HANDLERS\r\n    ///////////////////////////////////////////////////\r\n    function handleBoardClick(numberClicked) {\r\n        if (gameOver(moveList)) {\r\n            console.log(\"return without effects from handleBoardClick(). The Game is already over.\")\r\n            return;\r\n        }\r\n        if (moveList.includes(numberClicked)) {\r\n            console.log(\"return without effects from handleBoardClick(). That square has already been claimed.\")\r\n            return;\r\n        }\r\n        // If we reach this point the clicked square is open and the game is not over yet ... \r\n        let updatedMoveList = moveList.concat(numberClicked)\r\n        console.log(`MoveList: ${updatedMoveList}`)\r\n\r\n        setMoveList(updatedMoveList);\r\n\r\n        if (gameOver(updatedMoveList)) {\r\n            handleGameOver(updatedMoveList)\r\n        }\r\n    }\r\n    function handleUndoClick() {\r\n        const shortenedMoveList = moveList.slice(0, moveList.length - 1)\r\n        console.log(`handleUndoClick() removed ${moveList[moveList.length - 1]}. New Shortened history: ${shortenedMoveList}`);\r\n        setMoveList(shortenedMoveList);\r\n    }\r\n    function handleNewGameClick() {\r\n        const empty = [];\r\n        const nextGameNumber = ++gameNumber;\r\n        setMoveList(empty);\r\n        setGameNumber(nextGameNumber);\r\n    }\r\n\r\n    function handleGameOver(mls) {\r\n        // console.assert(gameOver(ml) === true, `NO EFFECT. handleGameOver called but the game isn't actually over!`);\r\n        if (xHasWon(mls)) {\r\n            setRecord([++record[0], record[1], record[2]])\r\n        }\r\n        else if (oHasWon(mls)) {\r\n            setRecord([record[0], ++record[1], record[2]])\r\n        }\r\n        else if (gameDrawn(mls)) {\r\n            setRecord([record[0], record[1], ++record[2]])\r\n        }\r\n        else {\r\n            console.error(`handleGameOver called with invalid game result!`)\r\n        }\r\n    }\r\n\r\n}\r\n","// X always goes first! X and O will be shorthand for the player who goes First and the player who goes second.\r\n// PlayerOne and PlayerTwo are NOT markers of who goes first or second in any given game!\r\n// In the 15 game, PlayerOne and PlayerTWo are distinguished by dark-blue and light-blue\r\nimport { generatePositionToOutcomeMap, sumsOfTwo, complementOf, intersect, gameOver, xNumbers, oNumbers, nextPlayer, availableNumbers } from \"./GameLogic\";\r\n// const outcomeMap = generatePositionToOutcomeMap()\r\n\r\n\r\n/////////////////////////////////////////////////////////////////////////\r\n// Coach & Bot Logic: Immediately Winning & Urgent Defensive Moves \r\n/////////////////////////////////////////////////////////////////////////\r\n// For NEXT Player on NEXT turn\r\nexport function winningMoves(mls) { \r\n    if (nextPlayer(mls) === \"xNext\") {\r\n        let complements = sumsOfTwo(xNumbers(mls)).map(sum => complementOf(sum))\r\n        return intersect(availableNumbers(mls), complements)\r\n    }\r\n    else {\r\n        let complements = sumsOfTwo(oNumbers(mls)).map(sum => complementOf(sum))\r\n        return intersect(availableNumbers(mls), complements)\r\n    }\r\n}\r\nexport function urgentDefensiveMoves(mls) {\r\n    if (nextPlayer(mls) === \"xNext\") {\r\n        let complements = sumsOfTwo(oNumbers(mls)).map(sum => complementOf(sum))\r\n        return intersect(availableNumbers(mls), complements)\r\n    }\r\n    else {\r\n        let complements = sumsOfTwo(xNumbers(mls)).map(sum => complementOf(sum))\r\n        return intersect(availableNumbers(mls), complements)\r\n    }\r\n}\r\nexport function doubleAttackingMoves(mls) {\r\n    let doubleAttackingMoves = availableNumbers(mls).filter(num => urgentDefensiveMoves(mls.concat(num)).length > 1)\r\n    return doubleAttackingMoves\r\n}\r\n\r\n\r\nexport function drawingMoves(mls) { // For NEXT Player\r\n    if (nextPlayer(mls) === \"xNext\") {\r\n        let complements = sumsOfTwo(xNumbers(mls)).map(sum => complementOf(sum))\r\n        return intersect(availableNumbers(mls), complements)\r\n    }\r\n    else {\r\n        let complements = sumsOfTwo(oNumbers(mls)).map(sum => complementOf(sum))\r\n        return intersect(availableNumbers(mls), complements)\r\n    }\r\n}\r\n\r\n\r\nexport function winningMovesForBot(mls, humanPlaysX) {\r\n    availableNumbers(mls)\r\n    \r\n}\r\n\r\nexport function sortBotMoves(ml, humanPlaysX, outcomeMap) {\r\n    let winningForBot = []\r\n    let drawing = []\r\n    let winningForHuman = []\r\n\r\n\r\n    let validMoves = getValidMoves(ml)\r\n    validMoves.forEach(move => {\r\n        let newPosition = ml.concat(move)\r\n        let outcome = outcomeMap.get(newPosition)\r\n        if (outcome === \"draw\") {\r\n            drawing.push(move)\r\n        }\r\n        else if (outcome === \"xWins\") {\r\n            if (humanPlaysX) {\r\n                winningForHuman.push(move)\r\n            }\r\n            else {\r\n                winningForBot.push(move)\r\n            }\r\n        }\r\n        else if (outcome === \"oWins\") {\r\n            if (humanPlaysX) {\r\n                winningForBot.push(move)\r\n            }\r\n            else {\r\n                winningForHuman.push(move)\r\n            }\r\n        }\r\n        else {\r\n            console.error(`Error in sortBotMoves`)\r\n        }\r\n    })\r\n    return {\r\n        \"winningForBot\": winningForBot,\r\n        \"drawing\": drawing,\r\n        \"winningForHuman\": winningForHuman,\r\n    }\r\n}\r\n\r\n\r\n////////////////////////////////////////////////////////////////\r\n// Isolate each players' claimed numbers: ARRAY(NUM)\r\n////////////////////////////////////////////////////////////////\r\n// function botsNumbers(ml, humanPlaysX) {  // Always the Human\r\n//     return (humanPlaysX) ? oNumbers(ml) : xNumbers(ml)\r\n// }\r\n\r\n\r\n// Randomly selects a move from a list of possible next moves.\r\nexport function selectMoveRandomly(moveSet) {\r\n    return moveSet[Math.floor(Math.random() * moveSet.length)]\r\n}\r\n\r\n/////////////////////////////////////////////////////////////////////////\r\n// Coach & Bot Logic: Immediately Winning & Urgent Defensive Moves \r\n/////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n\r\n\r\n////////////////////////////////////////////////////////////////\r\n// Get Children and Helpers:  An Array of move list Strings\r\n////////////////////////////////////////////////////////////////\r\nexport function getChildren(mls) {\r\n    let children = []\r\n    getValidMoves(mls).forEach(move => children.push(mls + move))\r\n    // this.validMoves(mls).forEach(move => children.push(mls + move))\r\n    return children\r\n}\r\nfunction getValidMoves(mls) {\r\n    return (gameOver(mls)) ? [] : availableNumbers(mls)\r\n}\r\n// export function availableNumbers(mls) {\r\n//     let availableNumbers = new Set([1, 2, 3, 4, 5, 6, 7, 8, 9])\r\n//     for (let i = 0; i < mls.length; i++) {\r\n//         availableNumbers.delete(parseInt(mls.charAt(i)))\r\n//     }\r\n//     // console.log(`Available Squares: ${availableNumbers}`)\r\n//     return Array.from(availableNumbers)\r\n// }\r\nexport function getParent(ml) {\r\n    return ml.slice(0, ml.length - 1)\r\n}\r\n\r\n////////////////////////////////////////////////////////////////\r\n// Opening Book\r\n////////////////////////////////////////////////////////////////\r\n// function getOpeningBookMove(ml) {\r\n//     console.assert(ml.length < 2)\r\n//     console.log(`BOT MAKING AN OPENING BOOK MOVE.`)\r\n\r\n//     if (ml.length === 0) {\r\n//         return selectMoveRandomly(availableNumbers(ml))\r\n//     }\r\n//     else if (ml[0] === 5) {\r\n//         return selectMoveRandomly([2, 4, 6, 8])\r\n//     }\r\n//     else if (ml[0] % 2 === 0) {  // If player took a corner, bot must take center.\r\n//         return [5]\r\n//     }\r\n//     else {\r\n//         return selectMoveRandomly(blockingMoves(ml))\r\n//     }\r\n// }","import React from 'react';\r\n\r\n// Custom Components\r\n\r\n// MUI Components\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// MUI Icons\r\n\r\n// Custom Styling\r\nimport '../../styles/App.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        color: theme.palette.common.white,\r\n        backgroundColor: theme.palette.primary.main,\r\n        width: '100%',\r\n        height: '2.1rem',\r\n        fontSize: '1rem',\r\n    },\r\n    selectedButton: {\r\n        color: theme.palette.common.white,\r\n        backgroundColor: 'rgba(46, 107, 18, 1.0)',\r\n    },\r\n    unselectedButton: {\r\n        color: '#999999',\r\n        backgroundColor: 'rgba(46, 107, 18, 0.5)',\r\n    },\r\n    \r\n}));\r\n\r\nexport default function DifficultyModeButtons(props) {\r\n    const classes = useStyles();\r\n\r\n    let easyButton = (\r\n        <Button\r\n            className={`${classes.button} ${props.difficultyMode === \"easy\" ? classes.selectedButton : classes.unselectedButton} `}\r\n            variant={'contained'}\r\n            onClick={() => props.handleDifficultyModeChange(\"easy\")}\r\n        >\r\n            Easy\r\n        </Button>\r\n    )\r\n\r\n    let mediumButton = (\r\n        <Button\r\n            className={`${classes.button} ${props.difficultyMode === \"medium\" ? classes.selectedButton : classes.unselectedButton} `}\r\n            variant={'contained'}\r\n            onClick={() => props.handleDifficultyModeChange(\"medium\")}\r\n        >\r\n            Medium\r\n        </Button>\r\n    )\r\n\r\n    let hardButton = (\r\n        <Button\r\n            className={`${classes.button} ${props.difficultyMode === \"hard\" ? classes.selectedButton : classes.unselectedButton} `}\r\n            variant={'contained'}\r\n            onClick={() => props.handleDifficultyModeChange(\"hard\")}\r\n        >\r\n            Hard\r\n        </Button>\r\n    )\r\n\r\n\r\n    return (\r\n        <Grid container spacing={3} >\r\n            <Grid item xs={4}  >\r\n                {easyButton}\r\n            </Grid>\r\n            <Grid item xs={4}  >\r\n                {mediumButton}\r\n            </Grid>\r\n            <Grid item xs={4}  >\r\n                {hardButton}\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\n// Custom Components\r\n\r\n// MUI Components\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// MUI Icons\r\n\r\n// Custom Styling\r\nimport '../../styles/App.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        color: theme.palette.common.white,\r\n        backgroundColor: theme.palette.primary.main,\r\n        width: '100%',\r\n        height: '2.1rem',\r\n        fontSize: '1rem',\r\n    },\r\n}));\r\n\r\nexport default function DifficultyModeButtons(props) {\r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            onClick={() => props.handleBotGoFirstClick()}\r\n            disabled={props.moveList.length !== 0}\r\n        >\r\n            Let&nbsp;Bot&nbsp;Go&nbsp;First\r\n        </Button>\r\n    )\r\n\r\n}\r\n","import React from 'react';\r\n\r\n// Custom Components\r\nimport GameNumber from '../../components/Panels/Parts/GameNumber'\r\nimport StatusHeader from '../../components/Panels/Parts/StatusHeader'\r\nimport TicTacToeRecord from '../../components/Panels/Parts/TicTacToeRecord'\r\nimport FifteenRecord from '../../components/Panels/Parts/FifteenRecord'\r\n\r\n\r\nimport DifficultyModeButtons from \"../../components/Buttons/DifficultyModeButtons\";\r\nimport NewGameButton from '../../components/Buttons/NewGameButton'\r\nimport BotGoFirstButton from '../../components/Buttons/BotGoFirstButton'\r\n \r\n// MUI Components\r\nimport { Box, Grid, Container } from '@material-ui/core';\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    panel: {\r\n        // border: 'solid orange 1px',\r\n        width: '100%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        padding: '0rem 0.5rem'\r\n    },\r\n    infoArea: {\r\n        // border: 'solid red 1px',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        padding: '1rem 0rem 2rem',\r\n    },\r\n    controls: {\r\n        // border: 'solid green 1px',\r\n    },\r\n    \r\n}));\r\n\r\nexport default function BotPanel(props) {\r\n    const classes = useStyles();\r\n\r\n    function gameOver(s = props.status) {\r\n        return (s === \"xWins\" || s === \"oWins\" || s === \"draw\")\r\n    }\r\n\r\n    let record = (props.game === \"tic-tac-toe\") ?\r\n        <TicTacToeRecord\r\n            playMode=\"humanVsBot\"\r\n            humanGoesFirst={props.humanGoesFirst}\r\n            record={props.record}\r\n            status={props.status}\r\n        /> :\r\n        <FifteenRecord\r\n            playMode=\"humanVsBot\"\r\n            humanGoesFirst={props.humanGoesFirst}\r\n            record={props.record}\r\n            status={props.status}\r\n        />\r\n    \r\n    return (\r\n        <Container maxWidth='sm' className={classes.panel} >\r\n            <Box className={classes.infoArea} >\r\n                <Box display=\"flex\" justifyContent=\"center\" color=\"textPrimary\"  >\r\n                    <GameNumber \r\n                        status={props.status}\r\n                        gameNumber={props.gameNumber}\r\n                    />&nbsp;&nbsp;&nbsp;\r\n                    <StatusHeader \r\n                        game={props.game}\r\n                        moveList={props.moveList}\r\n                        humanGoesFirst={props.humanGoesFirst}\r\n                    />\r\n                </Box>\r\n                {record}\r\n            </Box>\r\n            <Grid container spacing={2} className={classes.controls} >\r\n                <Grid item xs={12}  >\r\n                    <DifficultyModeButtons \r\n                        difficultyMode={props.difficultyMode}\r\n                        handleDifficultyModeChange={props.handleDifficultyModeChange}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={6}   >\r\n                    <NewGameButton\r\n                        gameOver={gameOver(props.status)}\r\n                        handleNewGameClick={props.handleNewGameClick}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={6}    >\r\n                    <BotGoFirstButton \r\n                        gameOver={false}\r\n                        moveList={props.moveList}\r\n                        handleBotGoFirstClick={props.handleBotGoFirstClick}\r\n                    />\r\n                </Grid>\r\n\r\n\r\n            </Grid>\r\n        </Container>\r\n    )\r\n\r\n    \r\n\r\n}\r\n\r\n\r\n","import React, { useState } from 'react';\r\n\r\n// My Logical Components\r\n// import positionToOutcomeMap from \"../pages/positionToOutcomeMap\";\r\nimport { status, gameOver, nextPlayer, availableNumbers, generatePositionToOutcomeMap } from \"../logic/GameLogic\";\r\nimport { selectMoveRandomly, winningMoves, urgentDefensiveMoves, sortBotMoves } from \"../logic/BotLogic\";\r\n\r\n// My React Components\r\nimport Navbar from \"../components/Navbar/Navbar\"\r\nimport TicTacToeBoard from \"../components/Boards/TicTacToeBoard\";\r\nimport FifteenBoard from \"../components/Boards/FifteenBoard\"\r\nimport BotPanel from \"../components/Panels/BotPanel\";\r\n\r\n// MUI  components\r\nimport { Box, Container } from '@material-ui/core';\r\n\r\n// Custom Styling\r\nimport '../styles/TicTacToe.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    boardArea: {\r\n        display: 'flex',\r\n        flex: '1 0 50vh',\r\n        justifyContent: 'center',\r\n        marginTop: \"1rem\"\r\n    },\r\n    panelArea: {\r\n        color: theme.palette.common.white,\r\n        backgroundColor: theme.palette.common.black,\r\n        display: 'flex',\r\n        flex: '1 0 45vh',\r\n    },\r\n}));\r\n\r\n// In Play With Coach mode X always goes first\r\n\r\nexport default function PlayVsBot(props) {\r\n    const outcomeMap = generatePositionToOutcomeMap()\r\n\r\n    const classes = useStyles();\r\n\r\n    // const xGoesFirst = true  // X always goes first\r\n    let [humanGoesFirst, setHumanGoesFirst] = useState(true);\r\n    \r\n    let startingPosition = \"\"  // vs []\r\n    let [moveList, setMoveList] = useState(startingPosition);\r\n\r\n    let [gameNumber, setGameNumber] = useState(1);\r\n    let [record, setRecord] = useState([0, 0, 0]);\r\n\r\n    let [difficultyMode, setDifficultyMode] = useState(\"hard\") // In \"hard\" mode my bot never makes a mistake.\r\n\r\n    console.assert(props.game === \"tic-tac-toe\" || props.game === \"fifteen-game\")\r\n    let board = (props.game === \"tic-tac-toe\") ?\r\n        <TicTacToeBoard\r\n            moveList={moveList}\r\n            handleBoardClick={handleBoardClick}\r\n            showHints={false}\r\n        /> :\r\n        <FifteenBoard\r\n            moveList={moveList}\r\n            handleBoardClick={handleBoardClick}\r\n            showHints={false}\r\n        />\r\n    \r\n    \r\n    return (\r\n        <Box className={classes.root} >\r\n            <Navbar pageTitle={(props.game === \"tic-tac-toe\") ? \"Tic Tac Toe vs. Bot\" : \"15 Game vs. Bot\"} />\r\n            <Container maxWidth=\"sm\" className={classes.boardArea}>\r\n                {board}\r\n            </Container>\r\n            <Box className={classes.panelArea}>\r\n                <BotPanel\r\n                    game={props.game}\r\n                    gameNumber={gameNumber}\r\n                    status={status(moveList)}\r\n                    moveList={moveList}\r\n                    record={record}\r\n                    difficultyMode={difficultyMode}\r\n                    humanGoesFirst={humanGoesFirst}\r\n                    handleNewGameClick={handleNewGameClick}\r\n                    handleBotGoFirstClick={handleBotGoFirstClick}\r\n                    handleDifficultyModeChange={handleDifficultyModeChange}\r\n                />\r\n            </Box>\r\n        </Box>\r\n    )\r\n\r\n    \r\n    function humanGoesNext(mls) {  \r\n        if (humanGoesFirst) {\r\n            return (nextPlayer(mls) === \"xNext\")\r\n        } \r\n        else {\r\n            return (nextPlayer(mls) === \"oNext\")\r\n        }\r\n    }\r\n    \r\n\r\n    // CLICK HANDLERS\r\n    function handleBoardClick(num) {\r\n        if (!humanGoesNext(moveList)) {\r\n            console.warn(\"NO EFFECT. Be patient, the bot takes a second to move. \")\r\n            return 1\r\n        }\r\n        else if (moveList.includes(num)) {\r\n            console.warn(\"NO EFFECT. That number has already been claimed.\")\r\n            return 1\r\n        }\r\n        else if (gameOver(moveList)) {\r\n            console.warn(\"NO EFFECT. The Game is already over.\")\r\n            return 1\r\n        }\r\n        else {\r\n            let updatedMoveList = moveList.concat(num)\r\n            // console.log(`updatedMoveList: ${updatedMoveList} `)\r\n            setMoveList(updatedMoveList)\r\n            if (gameOver(updatedMoveList)) {\r\n                handleGameOver(updatedMoveList)\r\n            } else {\r\n                handleBotsTurn(updatedMoveList)\r\n            }\r\n            return 0\r\n        }\r\n    }\r\n\r\n\r\n    function handleGameOver(ml) {\r\n        // console.assert(gameIsOver(ml), `NO EFFECT. handleGameOver called but the game isn't actually over!`)\r\n        let result = status(ml)\r\n\r\n        if (result === \"draw\") {\r\n            setRecord([record[0], record[1], ++record[2]])\r\n        }\r\n        else if (result === \"xWins\") {\r\n            if (humanGoesFirst) {\r\n                setRecord([++record[0], record[1], record[2]])\r\n            }\r\n            else {\r\n                setRecord([record[0], ++record[1], record[2]])\r\n            }\r\n        }\r\n        else if (result === \"oWins\") {\r\n            if (humanGoesFirst) {\r\n                setRecord([record[0], ++record[1], record[2]])\r\n            }\r\n            else {\r\n                setRecord([++record[0], record[1], record[2]])\r\n            }\r\n        }\r\n        else {\r\n            console.error(`handleGameOver called with invalid game result: ${result}. `)\r\n        }\r\n    }\r\n\r\n    function handleNewGameClick() {\r\n        setGameNumber(++gameNumber)\r\n        setHumanGoesFirst(true)\r\n        setMoveList(startingPosition)\r\n    }\r\n    function handleBotGoFirstClick() {\r\n        console.assert(moveList.length === 0, `handleLetBotGoFirstClick was called but it is not the frst move of the game!`)\r\n        setHumanGoesFirst(false)\r\n        handleBotsTurn('') // if the bot is going first the movelist is empty.\r\n    }\r\n    function handleDifficultyModeChange(newDifficulty) {\r\n        setGameNumber(1)\r\n        setHumanGoesFirst(true)\r\n        setRecord([0, 0, 0])\r\n        setMoveList(startingPosition)\r\n        setDifficultyMode(newDifficulty)\r\n    }\r\n\r\n    // Find and make a move for the Bot with a slight delay. \r\n    function handleBotsTurn(ml = moveList) {\r\n        let botMove = getBotMove(ml)\r\n        let updatedMoveList = ml.concat(botMove)\r\n        setTimeout(() => {\r\n            setMoveList(updatedMoveList)\r\n            if (gameOver(updatedMoveList)) {\r\n                console.log(\"Don't let player move again. Call handleGameOver instead.\")\r\n                handleGameOver(updatedMoveList)\r\n                return 1\r\n            }\r\n        }, 800)\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////////     \r\n    //  GET  BOT  MOVE  PROTOCOLS\r\n    ////////////////////////////////////////////////////////////// \r\n    function getBotMove(ml = moveList) {\r\n        if (difficultyMode === \"easy\") {\r\n            return easyProtocol(ml)\r\n        }\r\n        else if (difficultyMode === \"medium\") {\r\n            return mediumProtocol(ml)\r\n        }\r\n        else if (difficultyMode === \"hard\") {\r\n            return hardProtocol(ml)\r\n        }\r\n        else {\r\n            console.error(`getBotMove called with invalid difficulty mode!!!`)\r\n        }\r\n    }\r\n    // In EASY mode: Bot wins immediately if it can and otherwise selects a random move. \r\n    function easyProtocol(ml) {\r\n        if (winningMoves(ml).length > 0) {\r\n            console.log(`BOT FOUND IMMEDIEATELY WINNING MOVES: ${winningMoves(ml)}`)\r\n            return selectMoveRandomly(winningMoves(ml))\r\n        }\r\n        else {\r\n            return selectMoveRandomly(availableNumbers(ml))\r\n        }\r\n    }\r\n    // In MEDIUM mode, Bot wins immediately if possible.\r\n    // In MEDIUM mode, Bot blocks any immediate threats but does not look any further ahead. \r\n    function mediumProtocol(ml) {\r\n        let wins = winningMoves(ml)\r\n        let defensiveMoves = urgentDefensiveMoves(ml)\r\n        if (wins.length > 0) {\r\n            console.log(`BOT FOUND IMMEDIATELY WINNING MOVES: ${wins}`)\r\n            return selectMoveRandomly(wins)\r\n        }\r\n        else if (defensiveMoves.length > 0) {\r\n            console.log(`BOT FOUND URGENT DEFENSIVE MOVES: ${defensiveMoves}`)\r\n            return selectMoveRandomly(defensiveMoves)\r\n        }\r\n        else {\r\n            return selectMoveRandomly(availableNumbers(ml))\r\n        }\r\n    }\r\n\r\n    // In HARD mode Bot looks for forcing moves that will allow it to make double attacks on its next move.\r\n    // In HARD mode Bot avoids letting Player make forcing moves that will lead to double attacks.\r\n    function hardProtocol(ml) {\r\n        console.log(`Outcome Graph Hard Protocol called for move list: [${ml}]`)\r\n        console.time('getHardFromGraph')\r\n        let sorted = sortBotMoves(ml, humanGoesFirst, outcomeMap)\r\n        // console.log(`BOT SORTED its choices from position [${ml}]:`)\r\n        // console.log(`Bot found these Winning Moves: ${sorted.winningForBot}`)  \r\n        // console.log(`Bot found these Drawing Moves: ${sorted.drawing}`)\r\n        // console.log(`Bot found these Losing Moves: ${sorted.winningForHuman}`)\r\n        if (sorted.winningForBot.length > 0) {\r\n            return selectMoveRandomly(sorted.winningForBot)\r\n        }\r\n        else if (sorted.drawing.length > 0) {\r\n            return selectMoveRandomly(sorted.drawing)\r\n        }\r\n        else {\r\n            console.error(`Bot Found NEITHER Winning NOR Drawing Moves!!! Picking from Losing Moves: ${sorted.winningForHuman} `)\r\n            return selectMoveRandomly(sorted.winningForHuman)    \r\n        }\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\n\r\nimport { nextPlayer } from \"../../../logic/GameLogic\";\r\n\r\n// My Components\r\n\r\n// MUI  components\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\n// Custom Styling\r\n// import '../../styles/TicTacToe.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    commetaryBox: {\r\n        color: theme.palette.common.white,\r\n        width: '100%',\r\n    },\r\n}));\r\n\r\nexport default function CoachsCommentary(props) {\r\n    const classes = useStyles();\r\n\r\n    let moveList = props.moveList\r\n    let commentLabel = props.commentLabel\r\n\r\n    let next = (nextPlayer(moveList) === \"xNext\") ? \"X\" : \"O\"\r\n    let prev = (nextPlayer(moveList) === \"xNext\") ? \"O\" : \"X\"\r\n\r\n    return (\r\n        <Box className={classes.commetaryBox} >\r\n            <Typography align='justify' component='p' variant='body1' gutterBottom>\r\n                {getCommentary(commentLabel, next)}\r\n            </Typography>\r\n        </Box>\r\n    )\r\n\r\n    function getCommentary(commentLabel, next) {\r\n        console.log(`getCommentary called with commentLabel: ${commentLabel}`);\r\n        \r\n        let comment = `Error in get commentary.  Called with commentLabel: ${commentLabel}`\r\n        switch (commentLabel) {\r\n            case \"newGame\":\r\n                comment = `New Game. X always goes first. It may look like X has 9 different \r\n                options but, considering symmetry, there are really only 3: Center, Edge, or Corner. \r\n                Do any of them set X up to force a win? Is there any move for X that would be a 'mistake'?`\r\n                break;\r\n            case \"centerOpening\":\r\n                comment = `The Center Opening is the most popular. I think this is because there are more three-in-a-rows that\r\n                include the center square than the edges and corners. Though X is still on track for a draw, the center opening\r\n                is the easiest for O to defend against because, considering symmetry, O really only has two options, edge or corner.\r\n                One is good and keeps O on track for a draw. The other is bad and opens the door for X to force a win.`\r\n                break;\r\n            case \"cornerOpening\":\r\n                comment = `The Corner Opening can lead X to a winning double attack if O makes a mistake on their first move. \r\n                O has 5 non-symetrical options in this position, however, the only sound move that O has in this position is also the most\r\n                intuitive one. Proove this to yourself by going through O's 4 losing options and finding a plan that guarantees X \r\n                a victory in each one.`\r\n                break;\r\n            case \"edgeOpening\":\r\n                comment = `The Edge Opening is my personal favorite. It is the least commonly played and is the most complex to analyze.\r\n                There are many tricks and traps in this opening that both players can take advantage of!\r\n                O has five non-symmetrical options. Don't settle for just finding one move that lets O guarantee a draw,\r\n                dig into each of the five options and find the ones that maximize the chances X will make a mistake!`\r\n                break;\r\n            case \"immediateWin\":\r\n                comment = `${next} goes next and has the ability to win immediately! That means ${prev} must have made a mistake \r\n                earlier in the game. Go back and see if you can find the mistake and choose the better option instead.`\r\n                break;\r\n            case \"urgentDefence\":\r\n                comment = `${next} goes next and has an urgent defensive move they must make in order to not lose on the next turn!`\r\n                break;\r\n            case \"losing\":\r\n                comment = `${next} goes next, has no immediate way to win and ${prev} has more than one threat, meaning ${next} cannot \r\n                defend against them all. Defeat is on its way no matter what ${next} does now. This move is not the mistake though! \r\n                Go back and find the mistake that allowed ${prev} to create this double attack.`\r\n                break;\r\n            case \"doubleAttack\":\r\n                comment = `Though ${next} cannot win this turn, they can create a double attack, setting up for a\r\n                guaranteed win on their next turn no matter what ${prev} does. Don't settle for a move that only creates \r\n                one threat, you need to make two simultaneous threats in order to win.`\r\n                break;\r\n            case \"mistake\":\r\n                comment = `A mistake! Before that last move ${prev} was on track for a draw. That last move  \r\n                has given ${next} the opportunity to force a win. ${next} cannot create a double attack quite yet, so they will\r\n                have to look further into the future to see what forced continuations can lead them to making a double attack on\r\n                their next move. Don't settle for a draw anymore! Make the most of your opponent's mistake.`\r\n                break;\r\n            case \"missedWin\":\r\n                comment = `${next} made the first mistake and gave ${prev} a chance to force a win, but ${prev} replied with\r\n                another mistake and now they have missed missed that chance to win! Look for forcing moves that lead to double\r\n                attacks and you will avoid mistakes like the one ${prev} just made.`\r\n                break;\r\n            case \"sound\":\r\n                comment = `Good. The last move by ${prev} was \"sound\" meaning it has not hurt their worst case outcome: previously\r\n                on track for a draw, still on track for a draw.`\r\n                break;\r\n            case \"xWins\":\r\n                comment = `X has won the game! That means O must have made a mistake along the way.\r\n                Go back and see if you can find it on your own. If not, check the hints. In starting position, all 9 squares are Yellow, \r\n                indicating that no matter which one X chooses they will be on track for a draw. When Red squares appear in the hints these \r\n                indicate moves that would be mistakes, moves that would grant the opponent a chance to win.  When Green squares appear in \r\n                the hints these indicate moves that either win immediately or force a win in the next few moves.\r\n                Choosing a red square always a \"mistake\", but so is choosing a yellow square when you had a green option!`\r\n                break;\r\n            case \"oWins\":\r\n                comment = `O has won the game! That means X must have made a mistake along the way.\r\n                Go back and see if you can find it on your own. If not, check the hints. In starting position, all 9 squares are Yellow, \r\n                indicating that no matter which one X chooses they will be on track for a draw. When Red squares appear in the hints these \r\n                indicate moves that would be mistakes, moves that would grant the opponent a chance to win.  When Green squares appear in \r\n                the hints these indicate moves that either win immediately or force a win in the next few moves.\r\n                Choosing a red square always a \"mistake\", but so is choosing a yellow square when you had a green option!`\r\n                break;\r\n            case \"draw\":\r\n                comment = `The game has ended a draw. What did you expect? `\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return comment\r\n \r\n        \r\n\r\n        // If two moves has been made\r\n        // if (ml.length === 2) {\r\n        //     let message = '';\r\n        //     if (thereIsADistantForcedWinCreatingMove()) {\r\n        //         message = `O's first move was a mistake and now X can ensure victory! But how?`\r\n        //     }\r\n        //     else {\r\n        //         let answer = (gameLosingMoves().length > 0) ? 'Yes! So be careful.' : 'No! You\\'re safe no matter what.';\r\n        //         message = `O's first move was sound. None of X's current options ensure victory, but do any actually lose?  ${answer}`\r\n        //     }\r\n        //     return message;\r\n        // }\r\n\r\n        // If three moves have been made\r\n        // if (ml.length >= 3) {\r\n        //     let message = '';\r\n        //     if (thereIsAnImmediateWin()) {\r\n        //         message = `You have a winning move! Defensive moves are irrelevant.`\r\n        //     }\r\n        //     else if (thisIsADoubleAttack()) {\r\n        //         message = `You cannot win right now and cannot block all of your opponent's threats. Which move led you to from a draw to defeat?`\r\n        //     }\r\n        //     else if (thereIsADoubleAttackCreatingMove()) {\r\n        //         message = `You can set up a winning double attack! Don't settle for empty threats, \r\n        //         think hard and be sure that you are setting yourself up to win no matter what!`\r\n        //     }\r\n        //     else if (thereIsAnUrgentDefensiveMove()) {\r\n        //         message = `You cannot win right now so you must defend the one key square.`\r\n        //     }\r\n\r\n        //     else {\r\n        //         let answer = (gameLosingMoves().length > 0) ?\r\n        //             'Nonetheless, it is possible for you to make a mistake and lose right now. Play carefully!' :\r\n        //             'You\\'re on track for a draw no matter what move you play in this position.';\r\n        //         message = `You have neither a winning attack nor an urgent defensive move. ${answer}`\r\n        //     }\r\n        //     return message;\r\n        // }\r\n\r\n    }\r\n\r\n    \r\n    \r\n}\r\n","import React from 'react';\r\n\r\n// My Components\r\n\r\n// MUI Components\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// MUI Icons\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        width: '100%',\r\n        height: '2.1rem',\r\n        fontSize: '1rem',\r\n    },\r\n}));\r\n\r\nexport default function ShowHintsButton(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Button\r\n            className={classes.button}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => props.toggleShowHints()}\r\n        >\r\n            <Box mr={2} display=\"flex\" alignContent=\"center\" >\r\n                <HelpOutlineIcon />\r\n            </Box>\r\n            {props.showHints ? \"Hide Hints\" : \"Show Hints\"}\r\n        </Button>\r\n    )\r\n}\r\n    \r\n\r\n    \r\n\r\n","import React from 'react';\r\n\r\nimport { status, getParent } from \"../../logic/GameLogic\";\r\nimport { winningMoves, urgentDefensiveMoves, doubleAttackingMoves } from \"../../logic/BotLogic\";\r\n\r\n\r\n// Custom Components\r\nimport StatusHeader from './Parts/StatusHeader';\r\nimport CoachsCommentary from \"./Parts/CoachsCommentary\";\r\n\r\nimport UndoButton from \"../Buttons/UndoButton\";\r\nimport ShowHintsButton from \"../Buttons/ShowHintsButton\";\r\n\r\n// MUI Components\r\nimport Box from '@material-ui/core/Box';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid } from '@material-ui/core';\r\nconst useStyles = makeStyles((theme) => ({\r\n    panel: {\r\n        width: '100%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    infoArea: {\r\n        flex: '1 0 60%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    buttonArea: {\r\n        flex: '1 0 20%',\r\n        display: 'flex',\r\n    },\r\n}));\r\n\r\nexport default function CoachPanel(props) {\r\n    const { outcomeMap } = props\r\n    \r\n    const classes = useStyles();\r\n\r\n    \r\n     // TODO \r\n     // Move this function to the file GetCommentary\r\n     // Remove all JSX from getCommentary and instead of exporting a component export a function that takes the moveList\r\n     // and returns commentary as a string.\r\n    function getCommentLabel(moveList) {  \r\n        \r\n        let currentStatus = status(moveList)\r\n        let currentOutcome = outcomeMap.get(moveList)\r\n        let previousOutcome = outcomeMap.get(getParent(moveList));\r\n        console.log(`getCommentLabel called with moveList: ${moveList}`);\r\n        console.log(`Current Outcome ${currentOutcome}`);\r\n        console.log(`Previous Outcome ${previousOutcome}`);\r\n        \r\n        let label = \"error\"\r\n        if (moveList.length === 0) {\r\n            label = \"newGame\"\r\n        }\r\n        else if (currentStatus === \"xWins\") {\r\n            label = \"xWins\"\r\n        }\r\n        else if (currentStatus === \"oWins\") {\r\n            label = \"oWins\"\r\n        }\r\n        else if (currentStatus === \"draw\") {\r\n            label = \"draw\"\r\n        }\r\n        else if (moveList.length === 1) {\r\n            if (moveList.charAt(0) === \"5\") {\r\n                label = \"centerOpening\"\r\n            }\r\n            else if (Number(moveList.charAt(0)) % 2 === 0) {\r\n                label = \"cornerOpening\"\r\n            }\r\n            else {\r\n                label = \"edgeOpening\"\r\n            }\r\n        } \r\n        else if (winningMoves(moveList).length > 0 ) {\r\n            label = \"immediateWin\"\r\n        }\r\n        else if (urgentDefensiveMoves(moveList).length === 1) {         \r\n            label = \"urgentDefence\"\r\n        }\r\n        else if (urgentDefensiveMoves(moveList).length === 2) {\r\n            label = \"losing\"\r\n        }\r\n        else if (doubleAttackingMoves(moveList).length > 0) {\r\n            label = \"doubleAttack\"\r\n        }\r\n        else if (previousOutcome === \"draw\" && currentOutcome === \"draw\") { \r\n            label = \"sound\"\r\n        }\r\n        else if (previousOutcome === \"draw\" && (currentOutcome === \"xWins\" || currentOutcome === \"oWins\")) {  // in testing\r\n            label = \"mistake\"\r\n        }\r\n        else if (previousOutcome === \"oWins\" && (currentOutcome === \"xWins\" || currentOutcome === \"draw\")) {   // in testing\r\n            label = \"mistake\"\r\n        }\r\n        else if (previousOutcome === \"xWins\" && (currentOutcome === \"oWins\" || currentOutcome === \"draw\")) {   // in testing\r\n            label = \"mistake\"\r\n        }\r\n        else if (currentOutcome === \"draw\" && (previousOutcome === \"xWins\" || previousOutcome === \"oWins\")) {\r\n            label = \"missedWin\"\r\n        }\r\n        return label\r\n    }\r\n    let commentLabel = getCommentLabel(props.moveList)\r\n\r\n    return (\r\n        <Container maxWidth='sm' className={classes.panel} >\r\n            <Box className={classes.infoArea} >\r\n                <StatusHeader\r\n                    moveList={props.moveList}\r\n                />\r\n                <CoachsCommentary\r\n                    moveList={props.moveList}\r\n                    commentLabel={commentLabel}\r\n                /> \r\n            </Box>\r\n            <Grid container spacing={2} className={classes.buttonArea} >\r\n                <Grid item xs={7}   >\r\n                    <ShowHintsButton \r\n                        showHints={props.showHints}\r\n                        toggleShowHints={props.toggleShowHints}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={5}  >\r\n                    <UndoButton\r\n                        gameOver={false}\r\n                        moveList={props.moveList}\r\n                        handleUndoClick={props.handleUndoClick}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\n","import React, { useState } from 'react';\r\n\r\n// My Logical Components\r\n// import positionToOutcomeMap from \"../pages/positionToOutcomeMap\";\r\nimport { gameOver, generatePositionToOutcomeMap } from \"../logic/GameLogic\";\r\n\r\n// My React Components\r\nimport Navbar from \"../components/Navbar/Navbar\"\r\nimport TicTacToeBoard from \"../components/Boards/TicTacToeBoard\";\r\nimport CoachPanel from \"../components/Panels/CoachPanel\";\r\n\r\n// MUI  components\r\nimport Box from '@material-ui/core/Box';\r\n\r\n// Custom Styling\r\nimport '../styles/TicTacToe.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        height: '100vh',\r\n        overflowY: 'hidden',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    navbarArea: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        flex: '0 0 5vh',\r\n        maxHeight: '5vh'\r\n    },\r\n    boardArea: {\r\n        display: 'flex',\r\n        flex: '0 0 50vh',\r\n        justifyContent: 'center',\r\n        marginTop: \"1rem\"\r\n    },\r\n    panelArea: {\r\n        color: theme.palette.common.white,\r\n        backgroundColor: theme.palette.common.black,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        flex: '0 0 35vh',\r\n    },\r\n}));\r\n\r\n// In Play With Coach mode X always goes first\r\n\r\nexport default function PlayWithCoach(props) {\r\n    const outcomeMap = generatePositionToOutcomeMap()\r\n    const classes = useStyles();\r\n\r\n    let startingPosition = \"\" \r\n    let [moveList, setMoveList] = useState(startingPosition);\r\n    let [showHints, setShowHints] = useState(false);\r\n\r\n    return (\r\n        <Box className={classes.root} >\r\n            <Box className={classes.navbarArea}>\r\n                <Navbar pageTitle=\"Tic Tac Toe Coach\" />\r\n            </Box>\r\n\r\n            <Box className={classes.boardArea}>\r\n                <TicTacToeBoard\r\n                    moveList={moveList}\r\n                    showHints={showHints}\r\n                    handleBoardClick={handleBoardClick}\r\n                    outcomeMap={outcomeMap}\r\n                />\r\n            </Box>\r\n            <Box className={classes.panelArea}>\r\n                <CoachPanel\r\n                    moveList={moveList}\r\n                    showHints={showHints}\r\n                    toggleShowHints={toggleShowHints}\r\n                    handleUndoClick={handleUndoClick}\r\n                    outcomeMap={outcomeMap}\r\n                />\r\n            </Box>\r\n        </Box>\r\n    )\r\n    \r\n    // CLICK HANDLERS\r\n    function handleBoardClick(squareClicked) {\r\n        if (gameOver(moveList)) {\r\n            console.log(\"return without effects from handleSquareClick(). The Game is already over.\")\r\n            return;\r\n        }\r\n        if (moveList.includes(squareClicked)) {\r\n            console.log(\"return without effects from handleSquareClick(). That square has already been claimed.\")\r\n            return;\r\n        }\r\n        // If we reach this point the clicked square is open and the game is not over yet ... \r\n        let updatedMoveList = moveList.concat(squareClicked)\r\n        // console.log(`MoveList: ${updatedMoveList}`)\r\n        setMoveList(updatedMoveList);\r\n    }\r\n    function handleUndoClick() {\r\n        const shortenedMoveList = moveList.slice(0, moveList.length - 1)\r\n        console.log(`handleUndoClick() removed ${moveList[moveList.length - 1]} . New Shortened history: ${shortenedMoveList}`);\r\n        setMoveList(shortenedMoveList);\r\n    }\r\n    function toggleShowHints() {\r\n        setShowHints(!showHints)\r\n    }\r\n}\r\n","import {\r\n    createTheme,\r\n    responsiveFontSizes,\r\n} from '@material-ui/core/styles';\r\n\r\nconst white = \"#FFF\"\r\n\r\nconst theme = createTheme({\r\n    breakpoints: {\r\n        values: {\r\n            sm: 760\r\n        },\r\n    },\r\n    palette: {\r\n        primary: {\r\n            light: '#669944',\r\n            main: '#2e6b12',\r\n            dark: '#004000',\r\n            contrastText: white\r\n        },\r\n        secondary: {\r\n            light: white,\r\n            main: '#669944',\r\n            dark: '#777777',\r\n            contrastText: white\r\n        },\r\n        text: {\r\n            primary: white,\r\n            secondary: '#000000'\r\n        },\r\n        action: {\r\n            disabledBackground: '#2e6b12',\r\n            disabledOpacity: '0.5'\r\n        },\r\n        playerOne: {\r\n            backgroundColor: '#ffd600',\r\n            text: '#000'\r\n        }, \r\n        playerTwo: {\r\n            backgroundColor: '#2962ff',\r\n            text: white\r\n        }, \r\n    },\r\n    typography: {\r\n        h4: {\r\n            paddingTop: \"1rem\",\r\n            lineHeight: 1,\r\n            fontSize: \"2.125rem\"\r\n        },\r\n        h5: {\r\n            lineHeight: 1,\r\n            fontSize: \"1.8rem\"\r\n\r\n        },\r\n        h6: {\r\n            lineHeight: 1,\r\n            fontSize: \"1.5rem\",\r\n            fontWeight: 400\r\n\r\n        },\r\n        body1: {\r\n            color: white,\r\n            lineHeight: 1.35\r\n        },\r\n        button: {\r\n            textTransform: \"none\"\r\n        }\r\n    },\r\n    status: {\r\n        danger: 'orange',\r\n    },\r\n    shape: {\r\n        borderRadius: 8,\r\n    },\r\n    spacing: 8,\r\n\r\n});\r\n\r\nexport default responsiveFontSizes(theme)","import React from 'react'\r\nimport {\r\n    HashRouter as Router,\r\n    Route,\r\n    Switch\r\n} from \"react-router-dom\"\r\n\r\nimport './styles/App.css'\r\n\r\n// My Components & Pages\r\nimport WelcomePage from \"./pages/WelcomePage\"\r\n\r\n// PLAY MODES\r\nimport TicTacToeRules from './pages/TicTacToeRules'\r\nimport FifteenRules from './pages/FifteenRules'\r\nimport PlayVsHuman from './pages/PlayVsHuman'\r\nimport PlayVsBot from './pages/PlayVsBot'\r\nimport PlayWithCoach from './pages/PlayWithCoach'\r\n// import MagicSquares from \"./pages/MagicSquares\"\r\n\r\n// MUI  components\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport Box from '@material-ui/core/Box'\r\n\r\n// THEMING\r\nimport theme from \"./theme\"\r\nimport {\r\n    makeStyles,\r\n    ThemeProvider,\r\n} from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n        width: '100vw',\r\n        backgroundColor: theme.palette.common.black,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        overflow: 'hidden',\r\n    },\r\n}))\r\n\r\nexport default function App() {\r\n    const classes = useStyles();\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <ThemeProvider theme={theme}>\r\n                <Box className={classes.root} >\r\n                    <Router>\r\n                        <Switch>\r\n                            <Route exact path=\"/\">\r\n                                <WelcomePage />\r\n                            </Route>\r\n                            <Route path=\"/tic_tac_toe_rules\">\r\n                                <TicTacToeRules />\r\n                            </Route>\r\n                            <Route path=\"/fifteen_rules\">\r\n                                <FifteenRules />\r\n                            </Route>\r\n                            <Route path=\"/tic_tac_toe_vs_human\">\r\n                                <PlayVsHuman game={\"tic-tac-toe\"} />\r\n                            </Route>\r\n                            <Route path=\"/tic_tac_toe_vs_bot\">\r\n                                <PlayVsBot game={\"tic-tac-toe\"}  />\r\n                            </Route>\r\n                            <Route path=\"/tic_tac_toe_with_coach\">\r\n                                <PlayWithCoach game={\"tic-tac-toe\"} />\r\n                            </Route>    \r\n                            <Route path=\"/fifteen_vs_human\">\r\n                                <PlayVsHuman game={\"fifteen-game\"} />\r\n                            </Route>\r\n                            <Route path=\"/fifteen_vs_bot\">\r\n                                <PlayVsBot game={\"fifteen-game\"} />\r\n                            </Route>\r\n                            {/* <Route path=\"/magic_squares\">\r\n                                <MagicSquares />\r\n                            </Route> */}\r\n                        </Switch>\r\n                    </Router>\r\n                </Box>\r\n            </ThemeProvider>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n//   <React.StrictMode>\r\n    <App />,\r\n//   </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}